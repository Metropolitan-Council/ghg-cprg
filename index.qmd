# Executive summary {.unnumbered}
```{r}
source(file.path(here::here(), "R/_load_pkgs.R"))
source(file.path(here::here(), "R/_quarto_helpers.R"))
source(file.path(here::here(), "R/_plotting_helpers.R"))

county_emissions <- readRDS(file.path(here::here(), "_meta/data/cprg_county_emissions.RDS")) %>%
  mutate(sector = factor(sector,
    levels = c(
      "Transportation",
      "Residential",
      "Commercial",
      "Industrial",
      "Waste",
      "Agriculture",
      "Natural Systems"
    )
  ))


county_emissions_summary_2021 <- county_emissions %>%
  filter(emissions_year == 2021) %>%
  group_by(sector, category, source, data_source, factor_source) %>%
  summarize(
    value_emissions = sum(value_emissions),
    emissions_per_capita = sum(emissions_per_capita),
    .groups = "keep"
  )

county_emissions_summary_2005 <- county_emissions %>%
  filter(emissions_year == 2005) %>%
  group_by(sector, category, source, data_source, factor_source) %>%
  summarize(
    value_emissions = sum(value_emissions),
    .groups = "keep"
  ) %>%
  filter(!is.na(value_emissions)) # commercial natural gas from MPCA is NA

hookaddcap()
```

*This project has been funded wholly or in part by the United States Environmental Protection Agency (EPA) under assistance agreement 00E03476 to the Metropolitan Council. The contents of this document do not necessarily reflect the views and policies of the EPA, nor does the EPA endorse trade names or recommend the use of commercial products mentioned in this document.*

::: {.callout-note}
This document will be updated continuously in preparation of the Metropolitan Council Comprehensive Climate Action Plan (CCAP). Please check back occasionally as we update modify and add new content. You can find a summary of changes in the @sec-changelog. 
:::

```{r sector-percentages, echo=FALSE, include=FALSE}
sector_percentages <- county_emissions_summary_2021 %>%
  filter(
    !category == "Sequestration"
  ) %>% # not contributing to emissions
  group_by(sector) %>%
  summarize(value_emissions = sum(value_emissions)) %>%
  arrange(-value_emissions) %>%
  janitor::adorn_percentages(denominator = "col")

sector_percentages

emissions_total <- county_emissions_summary_2021 %>%
  filter(category != "Sequestration") %>%
  pull(value_emissions) %>%
  sum()

seq_total <- county_emissions_summary_2021 %>%
  filter(category == "Sequestration") %>%
  pull(value_emissions) %>%
  sum() * -1

seq_percentage <- seq_total / emissions_total

emissions_2005 <- county_emissions_summary_2005 %>%
  filter(category != "Sequestration") %>%
  pull(value_emissions) %>%
  sum()

electricity_2021 <- county_emissions_summary_2021 %>%
  filter(category == "Electricity") %>%
  pull(value_emissions) %>%
  sum()

electricity_2005 <- county_emissions_summary_2005 %>%
  filter(category == "Electricity") %>%
  pull(value_emissions) %>%
  sum()
```

In 2021, the Twin-Cities MSA generated `r round(emissions_total/1000000, digits = 2)` million metric tons CO~2~ equivalent (MMtCO~2~e) emissions from the energy, transportation, industrial, waste, and agricultural sectors. `r sector_percentages[[1]][1]` was the largest contributor to GHG emissions (`r scales::percent(sector_percentages[[2]][1], accuracy = 0.1)`), followed by `r sector_percentages[[1]][2]` (`r scales::percent(sector_percentages[[2]][2], accuracy = 0.1)`), and `r sector_percentages[[1]][3]` (`r scales::percent(sector_percentages[[2]][3], accuracy = 0.1)`). Carbon sequestration from natural systems offset `r scales::percent(seq_percentage, accuracy = 0.1)` of total emissions. In the methodology sector breakdown, we explain how electricity and natural gas emissions are calculated and apportioned to the residential, commercial, and industrial sectors.

```{r fig-county-emissions-sector}
#| fig-cap: "Regional emissions by sector and category"
#| out-width: "95%"

county_emissions_2021 <- county_emissions %>%
  filter(emissions_year == 2021) %>%
  mutate(category = if_else(category %in% c(
    "Building Fuel",
    "Electricity"
  ),
  source, category
  ))

# reorder to put sequestration at end
county_emissions_2021$sector <- factor(county_emissions_2021$sector,
  levels = c("Transportation", "Residential", "Commercial", "Industrial", "Waste", "Agriculture", "Natural Systems")
)

fig_county_emissions_sector <- plot_ly(
  data = county_emissions_2021 %>%
    group_by(sector, category) %>%
    summarize(
      value_emissions = sum(value_emissions),
      .groups = "keep"
    ),
  source = "fig-county-emissions-sector",
  x = ~sector,
  y = ~value_emissions,
  color = ~category,
  colors = unlist(category_colors),
  split = ~category,
  type = "bar",
  hovertemplate = ~ paste0(
    category, "<br>",
    round(value_emissions * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  )
) %>%
  plotly_layout("11-county regional greenhouse gas emissions, 2021",
    subtitle = "",
    x_title = "Sector",
    y_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Category",
    barmode = "stack"
  )

fig_county_emissions_sector
```


## Emissions through time

Emissions in the region fell by `r scales::percent((emissions_2005 - emissions_total) / emissions_2005, accuracy = 0.1)` from 2005 to 2021. This is principally attributed to decarbonization of the electric grid, which fell `r scales::percent((electricity_2005 - electricity_2021) / electricity_2005, accuracy = 0.1)` from 2005 to 2021. Other sectors showed small increases or decreases.

```{r fig-temporal-emissions}
#| fig-cap: "Regional emissions by sector through time"
#| out-width: "95%"


sector_order <- county_emissions %>%
  filter(emissions_year >= 2005 & emissions_year <= 2021, category != "Sequestration") %>%
  group_by(sector) %>%
  mutate(sector = if_else(sector == "Natural Systems", "Freshwater", sector)) %>% 
  summarize(total_emissions = sum(value_emissions, na.rm = TRUE)) %>%
  arrange((total_emissions)) %>%  # Sort descending (biggest at top)
  pull(sector)

emissions_data <- county_emissions %>%
  filter(emissions_year >= 2005 & emissions_year <= 2021,
         category != "Sequestration") %>%
  group_by(sector, emissions_year) %>%
  summarize(value_emissions = sum(value_emissions, na.rm = TRUE), .groups = "drop") %>%
  mutate(value_emissions = value_emissions / 1000000,
         sector = if_else(sector == "Natural Systems", "Freshwater", sector),
         sector = factor(sector, levels = sector_order))
  

sequestration_data <- county_emissions %>%
  filter(emissions_year >= 2005 & emissions_year <= 2021,
         category == "Sequestration") %>%
  group_by(sector, emissions_year) %>%
  summarize(value_emissions = sum(value_emissions, na.rm = TRUE), .groups = "drop") %>%
  mutate(value_emissions = value_emissions / 1000000) #

p <- plot_ly()

# Create plotly traces for each sector
emissions_through_time <- p %>% add_trace(
  data = emissions_data,
  source = "fig-temporal-emissions",
  x = ~emissions_year, y = ~value_emissions,
  type = "scatter", mode = "none", fill = "tonexty",
  stackgroup = "one",  # Stack sectors
  color = ~sector, colors = c(unlist(sector_colors),Freshwater = "#1E90FF"),  
  hoverinfo = "text",
  text = ~paste0("Year: ", emissions_year, "<br>",
                 "Sector: ", sector, "<br>",
                 "Emissions: ", round(value_emissions, 2), " MtCO2e"),
  name = ~sector
) %>% add_trace(
  data = sequestration_data,
  x = ~emissions_year, y = ~value_emissions,
  type = "scatter", mode = "none", fill = "tozeroy",  # Prevent stacking
  color = ~sector, colors = unlist(sector_colors),
  hoverinfo = "text",
  text = ~paste0("Year: ", emissions_year, "<br>",
                 "Sector: ", sector, "<br>",
                 "Sequestration: ", round(value_emissions, 2), " MtCO2e"),
  name = "Natural Systems"
)
        

emissions_through_time
```


## County Emissions

Different counties have different emission profiles depending on land-use and community characteristics.

``` {r fig-county-emissions}
#| fig-cap: "County emissions by sector in 2021"
#| out-width: "95%"

county_emissions_2021 <- county_emissions %>%
  filter(
    emissions_year == 2021,
    county_name != "MSP Airport",
    category != "Sequestration"
  )

county_emissions_raw <- plot_ly(
  data = county_emissions_2021,
  source = "fig-county-emissions",
  type = "bar",
  x = ~county_name,
  y = ~value_emissions,
  color = ~sector,
  split = ~sector,
  colors = unlist(sector_colors),
  marker = list(
    line = list(
      width = 0
    )
  ),
  hovertemplate = ~ paste0(
    county_name, " County", "<br>",
    sector, " - ", category, ", ", source, "<br>",
    round_emissions_metric_tons_co2e(value_emissions),
    "<extra></extra>"
  )
) %>%
  plotly_layout("County greenhouse gas emissions, 2021",
    subtitle = "",
    x_title = "County",
    y_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Category",
    barmode = "stack"
  )

county_emissions_raw
```

However, most emissions are closely tied to population and a per capita emissions profile shows a more even distribution.

``` {r fig-county-emissions-per-capita}
#| fig-cap: "County emissions per capita by sector in 2021"
#| out-width: "95%"

county_emissions_2021_per_capita <- plot_ly(
  data = county_emissions_2021,
  source = "fig-county-emissions-per-capita",
  type = "bar",
  x = ~county_name,
  y = ~emissions_per_capita,
  color = ~sector,
  split = ~sector,
  colors = unlist(sector_colors),
  marker = list(
    line = list(
      width = 0
    )
  ),
  hovertemplate = ~ paste0(
    county_name, " County", "<br>",
    sector, " - ", category, ", ", source, "<br>",
    round(emissions_per_capita),
    "<extra></extra>"
  )
) %>%
  plotly_layout("County greenhouse gas emissions per capita, 2021",
    subtitle = "",
    x_title = "County",
    y_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Category",
    barmode = "stack"
  )

county_emissions_2021_per_capita
```


::: {.content-visible when-format="html"}

## About this document

This is a Quarto book. Code, data, and documentation are all stored in the same place. We primarily use R. 

- To navigate from chapter to chapter, click on the chapter name in the left sidebar or click the arrow button at the end of the page.
- Citations can be previewed by hovering your mouse over the citation.
- Links to R scripts are available throughout the document. Click on the link to open the relevant R script and peruse the code behind this inventory.
- All plots are interactive. Hover your mouse over any bar or dot, and detailed information will appear. If you want to take a static screenshot of a plot, hover your mouse over the plot and find the camera icon in the upper right tool bar.
- Sections are cross-referenced throughout the document. Click on a "Section x.xx.xx" link to navigate to the appropriate section
- All headings, tables, and figures are permalinked, meaning that you can share specific sections of the document through a URL. Hover your mouse over a heading and click on the link icon. Then, copy the URL in your browser and share with colleagues. 

::: 

## Acknowledgements

This document is the result of tremendous work across the Metropolitan Council. Individuals are noted by their name, title, contribution, and division. 

:::: {.columns}

::: {.column width="50%"}
#### Primary authors {.unnumbered}
 - Sam Limerick, Senior Data Scientist, Electricity and Natural Gas (CD)  
 - Liz Roten, Senior Data Scientist, Transportation (MTS)  
 - Kenneth Smith, Principal Researcher, LIDAC, Natural Systems, Wastewater (CD)  
 - Peter Wilfahrt, Principal Researcher, Industrial, Agricultural, Wastewater,  (CD)  
 - Zoey Yandell, Intern, Solid Waste (CD)  
:::

::: {.column width="50%"}
#### Contributors {.unnumbered}
 - Laine McNamara, Business Systems Analyst III, editing (CD)  
:::

::::

```{r echo=FALSE}
caption_index <- readRDS(file.path(here::here(), "caption_index.RDS"))
caption_index <- as.character(as.numeric(caption_index) + 1) %>% stringr::str_pad(width = 2, side = "left", pad = "0")
saveCap(paste0("cap-", caption_index))
saveRDS(caption_index, file.path(here::here(), "caption_index.RDS"))
```

{{< pagebreak >}}

