# Waste and wastewater {#sec-waste}
```{r  include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  fig.pos = "H",
  out.width = "100%",
  dpi = 300
)


knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
```
```{r, include=FALSE}
source(file.path(here::here(), "R/_quarto_helpers.R"))
source(file.path(here::here(), "R/_load_pkgs.R"))
source(file.path(here::here(), "R/_plotting_helpers.R"))
source(file.path(here::here(), "R/global_warming_potential.R"))

cprg_population <- readRDS(file.path(here::here(), "_meta/data/cprg_population.RDS"))
cprg_county <- readRDS(file.path(
  here::here(),
  "_meta/data/cprg_county.RDS"
))

cprg_ctu <- readRDS(file.path(here::here(), "_meta/data/cprg_ctu.RDS"))
county_emissions <- readRDS(file.path(here::here(), "_meta/data/cprg_county_emissions.RDS"))
# this file is currently out of date. please update before adding full sector graphs

county_emissions_summary <- county_emissions %>%
  group_by(sector, category, source, data_source, factor_source) %>%
  summarize(
    value_emissions = sum(value_emissions),
    .groups = "keep"
  )

sector_percentages <- county_emissions_summary %>%
  group_by(sector) %>%
  summarize(value_emissions = sum(value_emissions)) %>%
  arrange(-value_emissions) %>%
  janitor::adorn_percentages(denominator = "col")


waste_percentages <- county_emissions_summary %>%
  filter(sector == "Waste") %>%
  group_by(category, source) %>%
  summarize(value_emissions = sum(value_emissions), .groups = "keep") %>%
  arrange(-value_emissions) %>%
  janitor::adorn_percentages(denominator = "col")

# solid waste ----
solid_waste_emissions <- readRDS(file.path(
  here::here(),
  "_waste/data/final_solid_waste_allyrs.RDS"
))

solid_waste_named <- solid_waste_emissions %>%
  left_join(cprg_county,
    by = join_by(geoid)
  ) %>%
  select(
    inventory_year,
    sector,
    category,
    source,
    value_emissions,
    county_name,
    county_name_full
  )


sw_county_summary <- solid_waste_named %>%
  group_by(inventory_year, county_name) %>%
  summarize(
    value_emissions = sum(value_emissions),
    .groups = "keep"
  ) %>%
  rowwise() %>%
  mutate(rounded_tons = round_emissions_metric_tons_co2e(value_emissions))

solid_waste_max_year <- solid_waste_emissions %>%
  filter(inventory_year == max(inventory_year)) %>%
  extract2("inventory_year") %>%
  unique()


solid_waste_min_year <- solid_waste_emissions %>%
  filter(inventory_year == min(inventory_year)) %>%
  extract2("inventory_year") %>%
  unique()

# gas emissions ----
solid_waste_gas <- readRDS(file.path(here::here(), "_waste/data/solid_waste_MN_by_gas.RDS")) %>%
  left_join(cprg_county %>% st_drop_geometry() %>%
    select(geoid, county_name))

wastewater_gas <- readRDS(file.path(here::here(), "_waste/data/_county_wastewater_emissions.RDS"))

# solid_waste_gas_wi <- readRDS(file.path(here::here(), "_waste/data/solid_waste_gas_WI_allyrs.RDS")) %>% 
#   select(-geoid)

county_gas_type <- bind_rows(
  wastewater_gas %>%
    group_by(inventory_year, county_name, units_emissions) %>%
    summarize(value_emissions = sum(value_emissions)),
  solid_waste_gas %>%
    group_by(inventory_year, county_name, units_emissions) %>%
    summarize(value_emissions = sum(value_emissions))
) %>%
  ungroup() %>%
  mutate(co2e = case_when(
    units_emissions == "Metric tons CH4" ~ value_emissions * gwp$ch4,
    units_emissions == "Metric tons N2O" ~ value_emissions * gwp$n2o,
    units_emissions == "Metric tons CO2" ~ value_emissions * gwp$co2
  ))

co2_2021 <- county_gas_type %>%
  filter(
    inventory_year == 2021,
    units_emissions == "Metric tons CO2"
  ) %>%
  pull(co2e) %>%
  sum()

methane_2021 <- county_gas_type %>%
  filter(
    inventory_year == 2021,
    units_emissions == "Metric tons CH4"
  ) %>%
  pull(co2e) %>%
  sum()

n2o_2021 <- county_gas_type %>%
  filter(
    inventory_year == 2021,
    units_emissions == "Metric tons N2O"
  ) %>%
  pull(co2e) %>%
  sum()

hookaddcap()
```

## Introduction

```{r calc-emissions-totals}
emissions_2021 <- county_emissions %>%
  filter(emissions_year == 2021) %>%
  pull(value_emissions) %>%
  sum()
waste_emissions_2021 <- county_emissions %>%
  filter(emissions_year == 2021, sector == "Waste") %>%
  pull(value_emissions) %>%
  sum()
waste_emissions_2005 <- county_emissions %>%
  filter(emissions_year == 2005, sector == "Waste") %>%
  pull(value_emissions) %>%
  sum()
```


In 2021, waste activities over the entire United States generated emissions of 169.2 MMTCO~2~e, or 2.7 percent of total U.S. greenhouse gas emissions [@usepaInventoryGreenhouseGas2023]. In the 11-county Twin Cities MSA region, municipal waste produced `r round(waste_emissions_2021)/1000000` MMTCO~2~e, or `r 100*round(waste_emissions_2021/emissions_2021, digits = 3)`% of the regional total. 

Municipal waste can broadly be divided into biogenic wastewater emissions and solid waste emissions. Our inventory accounts for industrial waste emission point sources in the industrial sector and wastewater processing emissions such as electricity and transportation in their respective sectors. Note that the Metropolitan Council Climate Action Work Plan accounts for holistic operational inventory emissions from wastewater processing.

## Results

### Baseline emissions

Regional waste emissions have increased by `r round(100 * ((waste_emissions_2021/waste_emissions_2005) - 1), digits = 2)`% since 2005, likely tied to population growth despite successful measures to reduce emissions per capita.

```{r fig-waste-baseline-emissions}
#| fig-cap: "Baseline agricultural emissions"
#| out-width: "95%"
#| fig.height: 4  # Set height in inches
#| fig.width: 8   # Set width in inches

fig_waste_baseline <- plot_ly(
  source = "fig-waste-baseline-emissions",
  data = county_emissions %>%
    filter(sector == "Waste") %>%
    group_by(emissions_year, category) %>%
    summarise(value_emissions = sum(value_emissions)),
  x = ~emissions_year,
  y = ~value_emissions,
  color = ~category, #
  colors = unlist(category_colors), # Directly map the colors to categories
  type = "scatter",
  mode = "lines", # No points or lines, just fill
  stackgroup = "one", # Fill to the next y value (stacking)
  hoverinfo = "x+y+name", # Ensure hover displays x, y, and category name
  hovertemplate = ~ paste0(
    "Year: %{x}<br>",
    "Category: %{text}<br>",
    "Emissions: %{y:.2f} metric tons CO<sub>2</sub>e<br>",
    "<extra></extra>"
  ),
  text = ~category # Pass category to hovertext
) %>%
  plotly_layout(
    main_title = "County Waste Emissions Over Time",
    x_title = "Year",
    y_title = "Million metric tons CO<sub>2</sub>e",
    subtitle = ""
  ) %>%
  layout(
    hovermode = "x unified", # Combine all hovertext under one hover
    hoverlabel = list(
      font = list(
        color = "black" # Set hovertext color to black
      )
    )
  )

fig_waste_baseline
```

### Emissions by gas type

The majority of waste emissions by weight are CO<sub>2</sub>, but when accounting for the increased warming potential of methane, CO<sub>2</sub>e, methane contributes the most to global warming. 
CO<sub>2</sub>: `r 100 * round(co2_2021/waste_emissions_2021, digits = 3)`% 
CH<sub>4</sub>: `r 100 * round(methane_2021/waste_emissions_2021, digits = 3)`% 
N<sub>2</sub>O: `r 100 * round(n2o_2021/waste_emissions_2021, digits = 3)`%



```{r fig-waste-county-emissions-by-gas-type}
#| fig-cap: "2021 county waste emissions by gas type"
#| out-width: "95%"

fig_waste_gas_type <- plot_ly(
  type = "bar",
  source = "fig-waste-county-emissions-by-gas-type",
  data = county_gas_type %>%
    filter(inventory_year == 2021),
  y = ~ reorder(county_name, value_emissions),
  x = ~value_emissions,
  color = ~units_emissions,
  hovertemplate = ~ paste0(
    county_name, "<br>",
    units_emissions, "<br>",
    round(value_emissions, digits = 2), "  metric tons of gas", "<br>",
    "<extra></extra>"
  )
) %>%
  plotly_layout(
    main_title = "2021 county waste emissions by gas type",
    x_title = "Metric tons of gas emitted",
    subtitle = ""
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    ),
    hoverlabel = list(
      font = list(
        color = "black" # Set hovertext color to black
      )
    )
  )

fig_waste_gas_type
```
```{r fig-waste-county-emissions-by-gas-type-co2e}
#| fig-cap: "2021 county waste emissions by gas type - CO2e"
#| out-width: "95%"

fig_waste_gas_type_co2e <- plot_ly(
  type = "bar",
  source = "fig-waste-county-emissions-by-gas-type-co2e",
  data = county_gas_type %>%
    filter(inventory_year == 2021),
  y = ~ reorder(county_name, co2e),
  x = ~co2e,
  color = ~units_emissions,
  hovertemplate = ~ paste0(
    county_name, "<br>",
    units_emissions, "<br>",
    round(co2e, digits = 2), "  metric tons of gas", "<br>",
    "<extra></extra>"
  )
) %>%
  plotly_layout(
    main_title = "2021 county waste emissions by gas type in CO2e",
    x_title = "Metric tons of CO2e",
    subtitle = ""
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    ),
    hoverlabel = list(
      font = list(
        color = "black" # Set hovertext color to black
      )
    )
  )

fig_waste_gas_type_co2e
```

### Solid waste

#### 2021 emissions

```{r solid-waste-percentages, include=FALSE}
solid_waste_percentages <- solid_waste_emissions %>%
  filter(inventory_year == 2021) %>%
  group_by(category, source) %>%
  summarize(value_emissions = sum(value_emissions)) %>%
  arrange(-value_emissions) %>%
  janitor::adorn_percentages(denominator = "col")


total_solid_waste <-
  solid_waste_emissions %>%
  ungroup() %>%
  filter(inventory_year == 2021) %>%
  summarise(value_emissions = sum(value_emissions)) %>%
  extract2("value_emissions")
```

Solid waste generated `r round(total_solid_waste/1000000, digits = 2)` MMtCO~2~e of emissions in the Twin Cities MSA in 2021. Of that total, `r scales::percent(solid_waste_percentages$value_emissions[1], accuracy = 0.1)` of emissions came from `r str_to_lower(solid_waste_percentages$source[1])`, `r scales::percent(solid_waste_percentages$value_emissions[2], accuracy = 0.1)` from `r str_to_lower(solid_waste_percentages$source[2])` facilities, and the remaining `r scales::percent(sum(solid_waste_percentages$value_emissions[3:4]), accuracy = 0.1)` from `r str_to_lower(solid_waste_percentages$source[3])` and `r str_to_lower(solid_waste_percentages$source[4])`.  

```{r fig-solid-waste-emissions}
#| fig-cap: "2021 solid waste emissions"
#| out-width: "95%"
fig_solid_waste_emissions <-
  plot_ly(
    type = "bar",
    source = "fig-solid-waste-emissions",
    data = solid_waste_named %>%
      filter(
        category == "Solid waste",
        inventory_year == 2021
      ),
    y = ~ reorder(county_name, value_emissions),
    x = ~value_emissions,
    color = ~category,
    colors = unlist(category_colors),
    marker = list(
      line = list(
        color = colors$councilBlue
      )
    ),
    hovertemplate = ~ paste0(
      county_name, " County", "<br>",
      category, ", ", source, "<br>",
      round(value_emissions / 1000, digits = 0), " thousand metric tons CO<sub>2</sub>e", "<br>",
      "<extra></extra>"
    )
  ) %>%
  plotly_layout(
    main_title = "2021 solid waste emissions",
    subtitle = "",
    y_title = "County",
    x_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Category"
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    ),
    yaxis = list(categoryorder = "total ascending")
  )
fig_solid_waste_emissions
```

Greenhouse gas emissions from solid waste are dominated by the landfill sector. In Hennepin, Ramsey, and Washington counties, municipal centers where a significant portion of waste is incinerated, waste-to-energy or incineration makes up a large fraction of emissions as well. 

```{r fig-solid-waste-sector-emissions-by-category}
#| fig-cap: "2021 solid waste emissions by category"
#| out-width: "95%"

fig_solid_waste_sector_emissions_by_category <-
  plot_ly(
    type = "bar",
    source = "fig-solid-waste-sector-emissions-by-category",
    data = solid_waste_named %>%
      filter(
        category == "Solid waste",
        inventory_year == 2021,
        source != "Onsite"
      ),
    y = ~ reorder(county_name, value_emissions),
    x = ~value_emissions,
    color = ~source,
    colors = unlist(source_colors),
    hovertemplate = ~ paste0(
      county_name, " County", "<br>",
      category, ", ", source, "<br>",
      round(value_emissions / 1000, digits = 0), " thousand metric tons CO<sub>2</sub>e", "<br>",
      "<extra></extra>"
    )
  ) %>%
  plotly_layout(
    main_title = "2021 solid waste emissions by category",
    subtitle = "",
    y_title = "County",
    x_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Category"
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    ),
    yaxis = list(categoryorder = "total ascending")
  )
fig_solid_waste_sector_emissions_by_category
```


<!-- consider inserting CTU estimates here -->

#### Historical emissions

The variation of solid waste emissions over the past 16 years is mainly due to variations in amount of waste collected. It does not take into account changes in methane capture and removal technology or adoption.

```{r fig-solid-waste-times-series-county}
#| fig-cap: "Solid waste emissions by county, 2005-2021"
#| out-width: "95%"

fig_solid_waste_time_series_county <- sw_county_summary %>%
  group_by(county_name) %>%
  plot_ly(
    source = "fig-solid-waste-time-series-county",
    x = ~inventory_year,
    y = ~value_emissions,
    color = ~county_name,
    colors = "Dark2",
    type = "scatter",
    mode = "lines+markers",
    marker = list(size = 10),
    hoverinfo = "text",
    hovertext = ~ paste0(
      county_name, "County, ", inventory_year, " ", "<br>",
      rounded_tons
    )
  ) %>%
  plotly_layout(
    main_title = paste0("Solid Waste emissions, ", solid_waste_min_year, " - ", solid_waste_max_year),
    subtitle = "",
    x_title = "Year",
    y_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "County"
  )

fig_solid_waste_time_series_county
```

```{r fig-solid-waste-time-series-source}
#| fig-cap: "Solid waste emissions by source, 2005-2021"
#| out-width: "95%"
#|
sw_source_summary <- solid_waste_named %>%
  group_by(inventory_year, source) %>%
  filter(source != "Onsite") %>%
  summarize(
    value_emissions = sum(value_emissions),
    .groups = "keep"
  ) %>%
  rowwise() %>%
  mutate(rounded_tons = round_emissions_metric_tons_co2e(value_emissions))

fig_solid_waste_time_series_source <- sw_source_summary %>%
  filter(source == "Landfill") %>%
  plot_ly(
    source = "fig-solid-waste-time-series-source",
    x = ~inventory_year,
    y = ~value_emissions,
    name = "Landfill",
    fillcolor = source_colors$Landfill,
    type = "scatter",
    mode = "none",
    stackgroup = "one",
    hoverinfo = "text",
    hovertext = ~ paste0(
      source, " emissions, ", inventory_year, " ", "<br>",
      rounded_tons
    )
  ) %>%
  add_trace(
    data = sw_source_summary %>% filter(source == "Organics"),
    y = ~value_emissions,
    name = "Organics",
    fillcolor = source_colors$Organics
  ) %>%
  add_trace(
    data = sw_source_summary %>% filter(source == "Waste to energy"),
    y = ~value_emissions,
    name = "Waste to energy",
    fillcolor = source_colors$`Waste to energy`
  ) %>%
  plotly_layout(
    main_title = paste0("Solid Waste emissions, ", solid_waste_min_year, " - ", solid_waste_max_year),
    subtitle = "",
    x_title = "Year",
    y_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Source"
  )

fig_solid_waste_time_series_source
```



```{r echo=FALSE}
caption_index <- readRDS(file.path(here::here(), "caption_index.RDS"))
caption_index <- as.character(as.numeric(caption_index) + 1) %>% stringr::str_pad(width = 2, side = "left", pad = "0")
saveCap(paste0("cap-", caption_index))
saveRDS(caption_index, file.path(here::here(), "caption_index.RDS"))
```
{{< pagebreak >}}
