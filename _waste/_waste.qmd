# Waste and Wastewater 
```{r  include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  fig.pos = "H",
  out.width = "100%",
  dpi = 300
)


knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
```
```{r, include=FALSE}
source(file.path(here::here(), "R/_quarto_helpers.R"))
source(file.path(here::here(), "R/_load_pkgs.R"))
source(file.path(here::here(), "R/_plotting_helpers.R"))
# source(file.path(here::here(), "_waste/data-raw/epa_inventory_data.R"))
epa_solidwaste_inventory <- readRDS(file.path(here::here(), "_waste/data-raw/epa_solidwaste_inventory.RDS"))

federal_totals <- epa_solidwaste_inventory %>%
  filter(source == "Total") %>%
  select(
    geog_name,
    emissions_metric_tons_co2e,
    data_source
  )

cprg_ctu <- readRDS(file.path(here::here(), "_meta/data/cprg_ctu.RDS"))
county_emissions <- readRDS(file.path(here::here(), "_meta/data/cprg_county_emissions.RDS"))

county_emissions_summary <- county_emissions %>%
  group_by(sector, category, source, data_source, factor_source) %>%
  summarize(
    emissions_metric_tons_co2e = sum(emissions_metric_tons_co2e),
    .groups = "keep"
  )
hookaddcap()
```

## Introduction

Solid waste and wastewater account for about 2.7% of United States greenhouse gas emissions, making them the third largest sector accounted for in this inventory. Solid waste emissions primarily consist of $CH_4$, emitted in large part by landfills and organics composting, but also include $CO_2$ and $N_2O$ generation. In the metropolitan area, waste incineration accounts for a significant portion of solid waste management and therefore emissions. This inventory also includes emissions generated in the management of recyclables.

Wastewater emissions are emissions generated during the wastewater treatment process, [???]

## Methods

The process for calculating solid waste emissions slightly differs between Minnesota and Wisconsin counties, due to a difference in data availability.

For Minnesota counties, waste generation totals are allocated by sector from MPCA SCORE data. Totals for each sector are multiplied by the appropriate EPA-provided emissions factor to provide an estimate of emissions from that source and county.

For Wisconsin counties, state-level emissions data as calculated by the Wisconsin DNR is allocated to the relevant counties by population. The emissions for each county $c$ are proportional to its fractional share of Wisconsin's population.

$$Emissions_c = Emissions_{total} \times \frac{Pop_c}{Pop_{total}}$$

## Results

```{r fig-waste-wastewater-county-emissions}
#| fig-cap: "Solid waste and wastewater county emissions"
#| out-width: "95%"
fig_waste_wastewater_county_emissions <-
  plot_county_sector_emissions(county_emissions,
    .sector = "Waste",
    .plotly_source = "fig-waste-wastewater-county-emissions"
  )

fig_waste_wastewater_county_emissions$x$layoutAttrs[[1]]$title$text <- "Solid waste and wastewater emissions"

fig_waste_wastewater_county_emissions
```


```{r fig-waste-county-emissions-by-category}
#| fig-cap: "Solid waste and wastewater county emissions by category"
#| out-width: "95%"

fig_waste_county_emissions_by_category <- plot_county_emissions(
  county_emissions = county_emissions,
  .sector = "Waste",
  .plotly_source = "fig-waste-county-emissions-by-category"
)

fig_waste_county_emissions_by_category$x$layoutAttrs[[1]]$title$text <- "Solid waste and wastewater emissions"

fig_waste_county_emissions_by_category
```

### Wastewater

```{r fig-wastewater-sector-emissions}
#| fig-cap: "2021 wastewater emissions"
#| out-width: "95%"

fig_wastewater_sector_emissions <-
  plot_ly(
    type = "bar",
    source = "fig-wastewater-sector-emissions",
    data = county_emissions %>%
      filter(source == "Wastewater"),
    y = ~ reorder(geog_name, emissions_metric_tons_co2e),
    x = ~emissions_metric_tons_co2e,
    color = ~category,
    colors = unlist(category_colors),
    hovertemplate = ~ paste0(
      geog_name, " County", "<br>",
      category, "<br>",
      round(emissions_metric_tons_co2e / 1000, digits = 0), " thousand metric tons CO<sub>2</sub>e", "<br>",
      "<extra></extra>"
    )
  ) %>%
  plotly_layout(
    main_title = "2021 wastewater emissions",
    subtitle = "",
    y_title = "County",
    x_title = "Metric tons CO<sub>2</sub>e",
    legend_title = ""
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    ),
    yaxis = list(categoryorder = "total ascending")
  )
fig_wastewater_sector_emissions
```


### Solid waste

Greenhouse gas emissions from solid waste are dominated by the landfill sector. In Hennepin, Ramsey, and Washington counties, municipal centers where a significant portion of waste is incinerated, waste-to-energy or incineration makes up a large fraction of emissions as well. 

```{r fig-solid-waste-emissions}
#| fig-cap: "2021 solid waste emissions"
#| out-width: "95%"
fig_solid_waste_emissions <-
  plot_ly(
    type = "bar",
    source = "fig-solid-waste-emissions",
    data = county_emissions %>%
      filter(category == "Solid waste"),
    y = ~ reorder(geog_name, emissions_metric_tons_co2e),
    x = ~emissions_metric_tons_co2e,
    color = ~category,
    colors = unlist(category_colors),
    marker = list(
      line = list(
        color = colors$councilBlue
      )
    ),
    hovertemplate = ~ paste0(
      geog_name, " County", "<br>",
      category, ", ", source, "<br>",
      round(emissions_metric_tons_co2e / 1000, digits = 0), " thousand metric tons CO<sub>2</sub>e", "<br>",
      "<extra></extra>"
    )
  ) %>%
  plotly_layout(
    main_title = "2021 solid waste emissions",
    subtitle = "",
    y_title = "County",
    x_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Category"
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    ),
    yaxis = list(categoryorder = "total ascending")
  )
fig_solid_waste_emissions
```


```{r fig-solid-waste-sector-emissions-by-category}
#| fig-cap: "2021 solid waste emissions by category"
#| out-width: "95%"
fig_solid_waste_sector_emissions_by_category <-
  plot_ly(
    type = "bar",
    source = "fig-solid-waste-sector-emissions-by-category",
    data = county_emissions %>%
      filter(category == "Solid waste"),
    y = ~ reorder(geog_name, emissions_metric_tons_co2e),
    x = ~emissions_metric_tons_co2e,
    color = ~source,
    colors = unlist(source_colors),
    hovertemplate = ~ paste0(
      geog_name, " County", "<br>",
      category, "<br>",
      round(emissions_metric_tons_co2e / 1000, digits = 0), " thousand metric tons CO<sub>2</sub>e", "<br>",
      "<extra></extra>"
    )
  ) %>%
  plotly_layout(
    main_title = "2021 solid waste emissions",
    subtitle = "",
    y_title = "County",
    x_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Category"
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    ),
    yaxis = list(categoryorder = "total ascending")
  )
fig_solid_waste_sector_emissions_by_category
```

```{r fig-sw-total-emissions}
#| fig-cap: "2021 solid waste emissions"
#| out-width: "95%"
county_emissions <- readRDS(file.path(here::here(), "_meta/data/cprg_county_emissions.RDS"))

waste_data <- county_emissions %>%
  dplyr::filter(category == "Solid waste")

plot_ly(
  data = waste_data,
  type = "bar",
  source = opts_current$get()$label,
  x = ~geog_name,
  y = ~emissions_metric_tons_co2e,
  color = ~source,
  split = ~source,
  colors = unlist(source_colors),
  hovertemplate = ~ paste0(
    geog_name, " County", "<br>",
    sector, " - ", category, ", ", source, "<br>",
    round(emissions_metric_tons_co2e * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  )
) %>%
  councilR::plotly_layout(
    main_title = "Solid waste emissions",
    subtitle = "",
    x_title = stringr::str_to_title(unique(waste_data$geog_level)),
    y_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Category"
  ) %>%
  plotly::layout(barmode = "stack")
```




<!-- ```{r fig-emissions-side-by-side} -->
<!-- #| fig-cap: "2021 annual emissions by waste management category" -->
<!-- plot_ly( -->
<!--   type = "bar", -->
<!--   source = opts_current$get()$label, -->
<!--   data = waste_data, -->
<!--   y = ~ reorder(geog_name, emissions_metric_tons_co2e), -->
<!--   x = ~emissions_metric_tons_co2e, -->
<!--   color = ~source, -->
<!--   colors = unlist(source_colors), -->
<!--   hovertemplate = ~ paste0( -->
<!--     geog_name, " County", "<br>", -->
<!--     source, "<br>", -->
<!--     round(emissions_metric_tons_co2e * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>", -->
<!--     "<extra></extra>" -->
<!--   ) -->
<!-- ) %>% -->
<!--   plotly_layout( -->
<!--     main_title = "2021 county-level CO2e solid waste emissions", -->
<!--     x_title = "Metric tons CO<sub>2</sub>e", -->
<!--     y_title = "County", -->
<!--     subtitle = "", -->
<!--     legend_title = "Management method" -->
<!--   ) %>% -->
<!--   layout( -->
<!--     barmode = "stack", -->
<!--     legend = list( -->
<!--       traceorder = "reversed" -->
<!--     ), -->
<!--     yaxis = list(categoryorder = "total ascending") -->
<!--     # note: ask how we want to lay out these plots. should it be the same as others or ascending -->
<!--   ) -->
<!-- ``` -->

### Correlation with related data

We would expect counties with a higher population to have high solid waste emissions.

```{r fig-emissions-population-solidwaste}
#| fig-cap: "County population and solid waste emissions"
#| out-width: "95%"
cprg_population <- readRDS(file.path(here::here(), "_meta/data/cprg_population.RDS"))

waste_totals <- waste_data %>%
  group_by(geog_name) %>%
  summarise(
    emissions_metric_tons_co2e = sum(emissions_metric_tons_co2e)
  )

waste_population <- left_join(waste_totals, cprg_population,
  by = c("geog_name" = "NAME")
)

fig_emissions_population_solidwaste <- plot_ly(
  data = waste_population,
  source = opts_current$get()$label,
  x = ~population,
  y = ~emissions_metric_tons_co2e,
  type = "scatter",
  mode = "markers",
  hovertemplate = ~ paste0(
    geog_name, " County", "<br>",
    "Population: ", scales::comma(population), "<br>",
    "Emissions: ", round(emissions_metric_tons_co2e * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  ),
  # opacity = 0.7,
  marker = list(
    color = colors$councilBlue,
    size = 18,
    line = list(
      color = "lightgray",
      width = 2
    )
  )
) %>%
  plotly_layout(
    main_title = "County population and solid waste emissions",
    subtitle = "2021 ACS 5-year population estimates. Strong positive correlation",
    x_title = "Total population",
    y_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "",
    legend = list(orientation = "h")
  )

fig_emissions_population_solidwaste
```

### Comparison with other inventories

#### US Greenhouse Gas Emissions Inventory

The United States EPA conducts a comprehensive yearly estimate of greenhouse gas emissions from multiple sectors and gases. It also publishes statewide totals consistent with the national inventory. These emissions totals are consistent with international standards for greenhouse gas accounting, although they may differ from inventories completed at the state level for various reasons.

US Inventory data for the waste sector in both Minnesota and Wisconsin was downloaded from the [Greenhouse Gas Inventory Data Explorer](https://cfpub.epa.gov/ghgdata/inventoryexplorer/) and processed in R script: [epa_inventory_data.R](/data-raw/epa_inventory_data.R), where it was disaggregated from state to county level by population.

```{r fig-federal-inventory-compare}
waste_federal <- waste_totals %>%
  mutate(data_source = "Met Council") %>%
  rbind(federal_totals)

plot_ly(
  data = waste_federal,
  source = opts_current$get()$label,
  x = ~geog_name,
  y = ~emissions_metric_tons_co2e,
  color = ~data_source,
  type = "bar",
  colors = c(
    "Met Council" = colors$councilBlue,
    "Federal Inventory" = cprg_colors$cprg_da_yellow
  ),
  hovertemplate = ~ paste0(
    geog_name, " County", "<br>",
    data_source, " emissions estimate: <br>", round(emissions_metric_tons_co2e * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  )
) %>%
  councilR::plotly_layout(
    main_title = "Solid Waste Emissions Comparison",
    subtitle = "Our emissions estimates compared to US Greenhouse Gas Inventory estimates",
    x_title = "County",
    y_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Emissions Source"
  ) %>%
  plotly::layout(barmode = "group")
```


```{r}
metc_solidwaste_inventory <- county_emissions %>%
  filter(sector == "Waste") %>%
  mutate(
    data_source = "Met Council",
    year = as.character(year)
  ) %>%
  select(names(epa_solidwaste_inventory))

metc_epa_comp_solid <- epa_solidwaste_inventory %>%
  filter(source != "Total") %>%
  bind_rows(metc_solidwaste_inventory) %>%
  mutate(
    source_unified = case_when(
      # source == "Anaerobic Digestion" ~ "Organics",
      TRUE ~ source
    )
  ) %>%
  select(-source)

wide_metc_epa_comp_solid <- metc_epa_comp_solid %>%
  pivot_wider(
    names_from = data_source,
    values_from = emissions_metric_tons_co2e
  ) %>%
  filter(
    !is.na(`Met Council`),
    !is.na(`Federal Inventory`)
  )
```



```{r}
plot_ly(
  data = metc_epa_comp_solid %>%
    filter(
      source_unified == "Landfill"
    ),
  y = ~geog_name,
  x = ~emissions_metric_tons_co2e,
  color = ~data_source,
  colors = c(
    "Met Council" = colors$councilBlue,
    "Federal Inventory" = cprg_colors$cprg_da_yellow
  ),
  hovertemplate = ~ paste0(
    geog_name, " County", "<br>",
    data_source, "<br>",
    source_unified, "<br>",
    round(emissions_metric_tons_co2e * 1e-3, digits = 0), " thousand metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  ),
  marker = list(size = 18),
  opacity = 0.7,
  type = "scatter",
  mode = "markers"
) %>%
  add_segments(
    data = wide_metc_epa_comp_solid %>%
      filter(source_unified == "Landfill"),
    y = ~geog_name,
    yend = ~geog_name,
    x = ~`Federal Inventory`,
    xend = ~`Met Council`,
    showlegend = FALSE,
    inherit = FALSE,
    line = list(
      color = "darkgray"
    )
  ) %>%
  councilR::plotly_layout(
    main_title = "Landfill emissions comparison",
    subtitle = "Met Council vs. US Greenhouse Gas Inventory estimates",
    y_title = "County",
    x_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Data source"
  ) %>%
  layout(yaxis = list(categoryorder = "total ascending"))
```
```{r}
plot_ly(
  data = metc_epa_comp_solid %>%
    filter(
      source_unified == "Wastewater"
    ),
  # geog_name == "Hennepin",
  y = ~geog_name,
  x = ~emissions_metric_tons_co2e,
  color = ~data_source,
  colors = c(
    "Met Council" = colors$councilBlue,
    "Federal Inventory" = cprg_colors$cprg_da_yellow
  ),
  hovertemplate = ~ paste0(
    geog_name, " County", "<br>",
    data_source, "<br>",
    source_unified, "<br>",
    round(emissions_metric_tons_co2e * 1e-3, digits = 0), " thousand metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  ),
  marker = list(size = 18),
  opacity = 0.7,
  type = "scatter",
  mode = "markers"
) %>%
  add_segments(
    data = wide_metc_epa_comp_solid %>%
      filter(source_unified == "Wastewater"),
    inherit = FALSE,
    y = ~geog_name,
    yend = ~geog_name,
    x = ~`Federal Inventory`,
    xend = ~`Met Council`,
    showlegend = FALSE,
    line = list(
      color = "darkgray"
    )
  ) %>%
  councilR::plotly_layout(
    main_title = "Wastewater emissions comparison",
    subtitle = "Federal estimate consistently higher",
    y_title = "County",
    x_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Data source"
  ) %>%
  layout(yaxis = list(categoryorder = "total ascending"))
```


```{r}
plot_ly(
  data = wide_metc_epa_comp_solid %>%
    filter(source_unified == "Landfill"),
  y = ~geog_name,
  x = ~`Federal Inventory`,
  split = ~source_unified,
  color = ~source_unified,
  # color = ~data_source,
  type = "scatter",
  mode = "markers",
  opacity = 0.7,
  marker = list(
    symbol = "circle",
    size = 12
  )
) %>%
  add_trace(
    inherit = TRUE,
    x = ~`Met Council`,
    opacity = 0.7,
    marker = list(
      symbol = "square",
      size = 12
    )
  ) %>%
  add_segments(
    y = ~geog_name,
    yend = ~geog_name,
    x = ~`Federal Inventory`,
    xend = ~`Met Council`
  )
```


```{r echo=FALSE}
caption_index <- readRDS(file.path(here::here(), "caption_index.RDS"))
caption_index <- as.character(as.numeric(caption_index) + 1) %>% stringr::str_pad(width = 2, side = "left", pad = "0")
saveCap(paste0("cap-", caption_index))
saveRDS(caption_index, file.path(here::here(), "caption_index.RDS"))
```
{{< pagebreak >}}
