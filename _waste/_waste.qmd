# Waste and Wastewater 
```{r  include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  fig.pos = "H",
  out.width = "100%",
  dpi = 300
)


knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
```
```{r, include=FALSE}
source(file.path(here::here(), "R/_quarto_helpers.R"))
source(file.path(here::here(), "R/_load_pkgs.R"))
source(file.path(here::here(), "R/_plotting_helpers.R"))

cprg_ctu <- readRDS(file.path(here::here(), "_meta/data/cprg_ctu.RDS"))
county_emissions <- readRDS(file.path(here::here(), "_meta/data/cprg_county_emissions.RDS"))

county_emissions_summary <- county_emissions %>%
  group_by(sector, category, source, data_source, factor_source) %>%
  summarize(
    emissions_metric_tons_co2e = sum(emissions_metric_tons_co2e),
    .groups = "keep"
  )
hookaddcap()
```

## Introduction

## Methods

## Results

```{r fig-waste-wastewater-county-emissions}
#| fig-cap: "Waste and wastewater county emissions"
#| out-width: "95%"
fig_waste_wastewater_county_emissions <-
  plot_county_sector_emissions(county_emissions,
    .sector = "Waste",
    .plotly_source = "fig-waste-wastewater-county-emissions"
  )
fig_waste_wastewater_county_emissions
```


```{r fig-waste-county-emissions-by-category}
#| fig-cap: "Waste and wastewater county level emissions"
#| out-width: "95%"

fig_waste_county_emissions_by_category <- plot_county_emissions(
  county_emissions = county_emissions,
  .sector = "Waste",
  .plotly_source = "fig-waste-county-emissions-by-category"
)
fig_waste_county_emissions_by_category
```

### Wastewater

```{r fig-wastewater-sector-emissions}
#| fig-cap: "2021 wastewater emissions"
#| out-width: "95%"

fig_wastewater_sector_emissions <-
  plot_ly(
    type = "bar",
    source = "fig-wastewater-sector-emissions",
    data = county_emissions %>%
      filter(source == "Wastewater"),
    y = ~ reorder(geog_name, emissions_metric_tons_co2e),
    x = ~emissions_metric_tons_co2e,
    # color = ~category,
    # colors = unlist(category_colors),
    marker = list(
      color = colors$councilBlue
    ),
    hovertemplate = ~ paste0(
      geog_name, " County", "<br>",
      category, "<br>",
      round(emissions_metric_tons_co2e / 1000, digits = 0), " thousand metric tons CO<sub>2</sub>e", "<br>",
      "<extra></extra>"
    )
  ) %>%
  plotly_layout(
    main_title = "2021 wastewater emissions",
    subtitle = "",
    y_title = "County",
    x_title = "Metric tons CO<sub>2</sub>e",
    legend_title = ""
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    )
  )
fig_wastewater_sector_emissions
```


### Solid waste

```{r fig-solid-waste-sector-emissions}
#| fig-cap: "2021 wastewater emissions"
#| out-width: "95%"


fig_solid_waste_sector_emissions <-
  plot_ly(
    type = "bar",
    source = "fig-wastewater-sector-emissions",
    data = county_emissions %>%
      filter(category == "Solid waste"),
    y = ~ reorder(geog_name, emissions_metric_tons_co2e),
    x = ~emissions_metric_tons_co2e,
    color = ~source,
    colors = unlist(source_colors),
    hovertemplate = ~ paste0(
      geog_name, " County", "<br>",
      category, "<br>",
      round(emissions_metric_tons_co2e / 1000, digits = 0), " thousand metric tons CO<sub>2</sub>e", "<br>",
      "<extra></extra>"
    )
  ) %>%
  plotly_layout(
    main_title = "2021 solid waste emissions",
    subtitle = "",
    y_title = "County",
    x_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Category"
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    )
  )
fig_solid_waste_sector_emissions
```


```{r echo=FALSE}
caption_index <- readRDS(file.path(here::here(), "caption_index.RDS"))
caption_index <- as.character(as.numeric(caption_index) + 1) %>% stringr::str_pad(width = 2, side = "left", pad = "0")
saveCap(paste0("cap-", caption_index))
saveRDS(caption_index, file.path(here::here(), "caption_index.RDS"))
```
{{< pagebreak >}}
