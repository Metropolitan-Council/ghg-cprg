---
title: "electricity-data-sourcing.qmd"
author: "Sam Limerick"
editor: visual
---

```{r libraries}

#check that all are all added and harmonized to/with renv before merge
library(here)
library(tidyverse)
library(councilR)
library(sf)
library(stringr)
library(tigris)
library(readxl) #check renv

#maintains the use of here() as project root, but creates a new filepath that points to the root of the ghg-cprg project to enable the use of other resources
cprg_rootDir <- here() %>% str_remove("/_energy/data-raw")
```

text

text

```{r minnesota-utilities}


# On Behalf Of: list of all utilities we identify operating in Minnesota counties

#Document type: 	'REPORT--ELECTRIC UTILITY ANNUAL REPORT' or	'REPORT--MN ELECTRIC UTILITY ANNUAL REPORT' 
# or REPORT--2021 ELECTRIC UTILITY DATA REPORT (e.g. Mountain Lake Municipal Utilites... not in tabular format)

# Where COunty Name = in scope county list (Hennepin...), snatch . COlumn B --> grab C, column F, grab G


#can/should update to use .RDS files generated by cprg_geography.R
mn_counties <- tigris::counties(state = "MN") %>%
  filter(NAME %in% c(
    "Anoka",
    "Carver",
    "Dakota",
    "Hennepin",
    "Ramsey",
    "Scott",
    "Sherburne",
    "Chisago",
    "Washington"
  )) %>%
  select(STATEFP,COUNTYFP,GEOID, NAME, NAMELSAD, geometry)

#Downloaded from https://gisdata.mn.gov/dataset/util-eusa. Minnesota provides all three utility types (IOU, Muni, Co-op) in one file
mn_elecUtils <- st_read(here("shp_util_eusa_MN", "Service_Areas.shp")) %>%
  select(comments, municipal, mmua_name, full_name, type, utility, street, city, state, zip, website, mpuc_name, mn_utility, eia_utilit, geometry)

#reproject MN counties to same projection as mn_elecUtils to perform intersection
mn_counties <- st_transform(mn_counties, st_crs(mn_elecUtils))

st_write(mn_counties, here("shp_util_eusa_MN","mn_counties_transformed.shp"), append = FALSE)

#identify utilities that operate in study area
MNutilities_in_scope <- st_intersection(mn_elecUtils, mn_counties) %>%
  select(comments, type, street, city, state, zip, website, mpuc_name,
         mn_utility, eia_utilit, NAME, NAMELSAD, geometry) %>%
  rename(utility_name = mpuc_name, utility_type = type, 
         mn_utility_id = mn_utility, county_name = NAME, county = NAMELSAD)

st_write(MNutilities_in_scope, here("shp_util_eusa_MN","MNutilities_in_scope.shp"), append = FALSE)

write_rds(MNutilities_in_scope, here("mn_utility_reporting", "MN_utilities.RDS"))

distinct_util_type_MN <- MNutilities_in_scope %>%
  distinct(utility_name, utility_type)

#Great River Energy is an electricity generation/transmission cooperative that is the primary supplier for multiple customer-facing MN electric utilities that operate within our study area. The following dataframe encodes all of the member cooperatives of Great River (and their headquarters city); some of these organizations do not directly report their electricity delivered to the State and so we must referen ce documents submitted by Great River. Info from 2021 Great River Annual Financial Report (https://greatriverenergy.com/wp-content/uploads/2022/04/2021-GRE-Annual-Report-FINAL.pdf)

GreatRiver_utilities <- data.frame(
  utility = c(
    "Agralite Electric Cooperative", "Arrowhead Cooperative, Inc.", 
    "BENCO Electric", "Brown County Rural Electrical Association", 
    "Connexus Energy", "Cooperative Light & Power", "Crow Wing Power", 
    "Dakota Electric Association", "East Central Energy", 
    "Federated Rural Electric Association", 
    "Goodhue County Cooperative Electric Association", 
    "Itasca-Mantrap Cooperative Electrical Association", 
    "Kandiyohi Power Cooperative", "Lake Country Power", 
    "Lake Region Electric Cooperative", "McLeod Cooperative Power Association", 
    "Meeker Cooperative Light and Power Association", 
    "Mille Lacs Energy Cooperative", "Minnesota Valley Electric Cooperative", 
    "Nobles Cooperative Electric", "North Itasca Electric Cooperative, Inc.", 
    "Redwood Electric Cooperative", "Runestone Electric Association", 
    "South Central Electric Association", "Stearns Electric Association", 
    "Steele-Waseca Cooperative Electric", "Todd-Wadena Electric Cooperative", 
    "Wright-Hennepin Cooperative Electric Association"
  ),
  city = c(
    "Benson", "Lutsen", "Mankato", "Sleepy Eye", "Ramsey", "Two Harbors", 
    "Brainerd", "Farmington", "Braham", "Jackson", "Zumbrota", "Park Rapids", 
    "Spicer", "Cohasset", "Pelican Rapids", "Glencoe", "Litchfield", 
    "Aitkin", "Jordan", "Worthington", "Bigfork", "Clements", "Alexandria", 
    "St. James", "Melrose", "Owatonna", "Wadena", "Rockford"
  )
)

```

Wisconsin utilities

```{r wisconsin-utilities}

wi_counties <- tigris::counties(state = "WI") %>%
  filter(NAME %in% c(
    "St. Croix",
    "Pierce"
  ))


#downloaded from https://psc.wi.gov/Pages/ForConsumers/Maps.aspx. CRS is NAD83(HARN) / Wisconsin Transverse Mercator. -- add to Zotero
wi_muni <- st_read(here("EL_PSCW_ServTerr (1)", 
                        "EL_PSCW_ServTerr_Muni_repaired.shp")) #input data from WI had issues with dimensionality/geometry on some features; I filtered this data to just the 2 municipal utilities -- New Richmond and River Falls -- thatfall within our study area in ArcGIS PRO to address this issue) 
wi_iou <- st_read(here("EL_PSCW_ServTerr (1)", 
                       "EL_PSCW_ServTerr_IOU.shp"))
wi_coop <- st_read(here("EL_PSCW_ServTerr (1)", 
                        "EL_PSCW_ServTerr_Coop.shp"))


#harmonize county data CRS to WI state-provided data
wi_counties <- st_transform(wi_counties, st_crs(wi_iou))


identify_WIutilities_in_scope <- function(wi_counties, utility_files) {
  utilities_in_scope <- list()

  for (utility_file in utility_files) {
    
    utility_type <- basename(utility_file)  # Get the filename
    utility_type <- sub("^EL_PSCW_ServTerr_", "", utility_type)  # Remove prefix
    utility_type <- sub("\\.shp$", "", utility_type)  # Remove file extension
    
    utility_data <- st_read(utility_file)  # Read the shapefile
    clipped_utility <- st_intersection(utility_data, wi_counties)  # Clip utility to counties

    # Store in the list with utility type
    utilities_in_scope[[utility_type]] <- clipped_utility
  }

  return(utilities_in_scope)
}

# Example usage
wi_utility_files <- c(
  here("EL_PSCW_ServTerr (1)", 
       "EL_PSCW_ServTerr_Muni_repaired.shp"),
  here("EL_PSCW_ServTerr (1)", 
       "EL_PSCW_ServTerr_IOU.shp"),
  here("EL_PSCW_ServTerr (1)", 
       "EL_PSCW_ServTerr_Coop.shp")
)

#run function to create lists
results <- identify_WIutilities_in_scope(wi_counties, wi_utility_files)

#write outputs of function to separate environmental variables for inspection, trim to essential columns
wi_muni_utilitiesInScope <- results$Muni_repaired %>%
  select(LABEL, Util_Type, PSC_ID, ADDRESS_1, ADDRESS_2, 
         CITY, STATE, ZIP, GEOID, NAME, NAMELSAD) %>%
  rename(utility_name = LABEL, utility_type = Util_Type, 
         county_name = NAME, county = NAMELSAD)

wi_iou_utilitiesInScope <- results$IOU %>%
  select(LABEL, UTIL_TYPE, PSC_ID, ADDRESS_1, ADDRESS_2,
         CITY, STATE, ZIP, GEOID, NAME, NAMELSAD) %>%
  rename(utility_name = LABEL, utility_type = UTIL_TYPE, 
         county_name = NAME, county = NAMELSAD)


wi_coop_utilitiesInScope <- results$Coop %>%
  select(LABEL, Util_Type, PSC_ID, ADDRESS_1, ADDRESS_2,
         CITY, STATE, ZIP, GEOID, NAME, NAMELSAD) %>%
  rename(utility_name = LABEL, utility_type = Util_Type, 
         county_name = NAME, county = NAMELSAD)
  

WIutilities_in_scope <- rbind(wi_muni_utilitiesInScope,
                            wi_iou_utilitiesInScope,
                            wi_coop_utilitiesInScope)

st_write(WIutilities_in_scope, 
         here("EL_PSCW_ServTerr (1)", "WIutilities_in_scope.shp"),
         append = FALSE)
         

write_rds(WIutilities_in_scope, here("wi_utility_reporting", 
                                     "WI_utilities.RDS"))

distinct_util_type_WI <- WIutilities_in_scope %>%
  distinct(utility_name, utility_type)
  
```

Minnesota utility activity data processing

```{r}


# Directory containing Excel files
dir_mn_electricity <- here("mn_utility_reporting")

# Get list of Excel files in the directory
file_list <- list.files(path = dir_mn_electricity, pattern = "\\.xlsx$", full.names = TRUE)

# Function to process each file
process_file <- function(file_path) {
  utility_name <- tools::file_path_sans_ext(basename(file_path))
  
  # Read specific ranges from the file
  data_A_C <- read_excel(file_path, sheet = "ElectricityByCounty", range = "A12:C56")
  data_E_G <- read_excel(file_path, sheet = "ElectricityByCounty", range = "E12:G53")
  
  # Rename columns
  colnames(data_A_C) <- c("countyCode", "county", "mWh_delivered")
  colnames(data_E_G) <- c("countyCode", "county", "mWh_delivered")
  
  # Combine the data from both ranges
  combined_data <- rbind(data_A_C, data_E_G)
  
  # Filter for specific counties
  combined_data <- combined_data %>% 
    filter(county %in% c("Anoka", "Carver", "Dakota", "Hennepin", "Ramsey", 
                         "Scott", "Sherburne", "Chisago", "Washington"))
  
  # Add utility name
  combined_data$utility <- utility_name
  
  return(combined_data)
}

# Process all files and combine the data
combined_MNelectUtil_activityData <- do.call(rbind, lapply(file_list, process_file))
  
```

Minnesota emissions factor

```{r apply-emissions-factor}


# Load eGRID Total Output Emission Rates (lb/MWh) for CO2 for the MROW subregion (which covers our study area) from https://www.epa.gov/egrid/summary-data 
eGRID_MROW_emissionsFactor <- 995.8

# Assuming each row in mn_electricity_data represents a utility's electricity delivery in a county, process and merge data -- this will be a separate data colelction process spanning excel reports submitted to state
processed_mn_elecUtil_activityData <- combined_MNelectUtil_activityData %>%
  mutate(GHG_emissions = mWh_delivered * eGRID_MROW_emissionsFactor)

# Aggregate data by county
county_level_emissions <- processed_mn_elecUtil_activityData %>%
  group_by(county) %>%
  summarise(total_GHG_emissions_lbs = sum(GHG_emissions, na.rm = TRUE),
            total_GHG_emissions_tons = total_GHG_emissions_lbs / 2000)
```

Wisconsin data processing

```{r Wisconsin-data}


# Example data frame: utility_data
# utility_data <- data.frame(utility_id, total_electricity, total_customers, ...)

# Example data frame: county_customer_data
# county_customer_data <- data.frame(utility_id, county, county_customers, ...)

# Join utility data with county customer data
combined_data <- left_join(county_customer_data, utility_data, by = "utility_id")

# Calculate proportion of electricity delivered to each county
combined_data <- combined_data %>%
  mutate(proportion = county_customers / total_customers,
         county_electricity = total_electricity * proportion)

# Step 3: Aggregate to get total electricity per county
county_electricity_totals <- combined_data %>%
  group_by(county) %>%
  summarise(total_electricity = sum(county_electricity))

# Step 4: Apply emissions factors
county_electricity_totals <- county_electricity_totals %>%
  mutate(GHG_emissions = total_electricity * emissions_factor)  # Replace emissions_factor with actual factor
```

text

```{r county-utilities}


#connect to PUDL to query unique list of 
#select distinct raw.utility_id_eia, core.utility_name_eia from #out_ferc714__respondents_with_fips raw join core_eia__entity_utilities core on raw#.utility_id_eia = core.utility_id_eia where county_id_fips in ()
```

text

```{r}

```
