---
title: "naturalgas-data-sourcing.qmd"
author: "Sam Limerick"
editor: visual
---

```{r libraries}

#check that all are all added and harmonized to/with renv before merge, and ensure that all are in R/load_pkgs
library(here)
library(sf)
library(dplyr)
library(councilR)
library(stringr)
library(tigris)
library(readxl)

#maintains the use of here() as project root, but creates a new filepath that points to the root of the ghg-cprg project to enable the use of other resources
cprg_rootDir <- here() %>% str_remove("/_energy/data-raw")
```

text

text

```{r minnesota-utilities}

#can/should update to use .RDS files generated by cprg_geography.R
mn_counties <- tigris::counties(state = "MN") %>%
  filter(NAME %in% c(
    "Anoka",
    "Carver",
    "Dakota",
    "Hennepin",
    "Ramsey",
    "Scott",
    "Sherburne",
    "Chisago",
    "Washington"
  )) %>%
  select(STATEFP,COUNTYFP,GEOID, NAME, NAMELSAD, geometry)

#No state maintained natural gas service territory layers per MnGeo (https://www.mngeo.state.mn.us/chouse/utilities.html#gas). Federal source via Dept. of Homeland Security Geospatial Management Office entitled Homeland Infrastructure Foundation-Level Data (HIFLD) downloaded from https://hifld-geoplatform.opendata.arcgis.com/maps/natural-gas-service-territories
fed_natGasUtils <- st_read(here("Natural_Gas_Service_Territories", "NG_Service_Terr.shp")) %>%
  select(NAME, TYPE, COUNTY, COUNTYFIPS, SOURCE)

#reproject MN counties to same projection as mn_elecUtils to perform intersection
mn_counties <- st_transform(mn_counties, st_crs(fed_natGasUtils))

#identify utilities that operate in study area
MNutilities_in_scope <- st_intersection(fed_natGasUtils, mn_counties) %>%
  rename(utility_name = NAME, utility_type = TYPE, county_name = COUNTY, dataSource = SOURCE)

write_rds(MNutilities_in_scope, here("mn_natGas_utility_reporting", "MN_natGas_utilities.RDS"))

distinct_natGas_util_type_MN <- MNutilities_in_scope %>%
  distinct(utility_name, utility_type)

rm(fed_natGasUtils)
rm(mn_counties)

```

Wisconsin utilities

```{r wisconsin-utilities}

wi_counties <- tigris::counties(state = "WI") %>%
  filter(NAME %in% c(
    "St. Croix",
    "Pierce"
  ))


#Wisconsin maintains state-level natural gas service area maps. Downloaded from https://psc.wi.gov/Pages/ForConsumers/Maps.aspx. 
WI_natGasUtils <- st_read(here("NG_PSCW_ServTerr", "NG_PSCW_ServTerr.shp")) %>%
  select(Util_Name, Util_ID, CITY, geometry)

#reproject WI counties to same projection as wi_natGasUtils to perform intersection
wi_counties <- st_transform(wi_counties, st_crs(WI_natGasUtils)) %>%
  select(GEOID, NAME, NAMELSAD, geometry)

#identify utilities that operate in study area
WIutilities_in_scope <- st_intersection(WI_natGasUtils, wi_counties) %>%
  rename(utility_name = Util_Name, county_name = NAME)

write_rds(WIutilities_in_scope, here("wi_natGas_utility_reporting", "MN_natGas_utilities.RDS"))

distinct_natGas_util_WI <- WIutilities_in_scope %>%
  distinct(utility_name)

rm(wi_counties)
rm(WI_natGasUtils)
```

Minnesota utility activity data processing

```{r}


# Directory containing Excel files
dir_mn_gas <- here("mn_natGas_utility_reporting")

# Get list of Excel files in the directory
file_list <- list.files(path = dir_mn_gas, pattern = "\\.xlsx$", full.names = TRUE)

# Function to process each file
process_file <- function(file_path) {
  utility_name <- tools::file_path_sans_ext(basename(file_path))
  
  # Read specific ranges from the file
  data_A_C <- read_excel(file_path, sheet = "GasByCounty", range = "A15:C59")
  data_E_G <- read_excel(file_path, sheet = "GasByCounty", range = "E15:G56")
  
  # Rename columns
  colnames(data_A_C) <- c("countyCode", "county", "mcf_delivered")
  colnames(data_E_G) <- c("countyCode", "county", "mcf_delivered")
  
  # Combine the data from both ranges
  combined_data <- rbind(data_A_C, data_E_G)
  
  # Filter for specific counties
  combined_data <- combined_data %>% 
    filter(county %in% c("Anoka", "Carver", "Dakota", "Hennepin", "Ramsey", 
                         "Scott", "Sherburne", "Chisago", "Washington"))
  
  # Add utility name
  combined_data$utility <- utility_name
  
  return(combined_data)
}

# Process all files and combine the data
combined_MNgasUtil_activityData <- do.call(rbind, lapply(file_list, process_file))


rm(dir_mn_gas)
rm(file_list)
  
```

Minnesota emissions factor

```{r apply-emissions-factor}


# Natural Gas emissions factor from https://www.epa.gov/system/files/documents/2023-04/emission-factors_sept2021.pdf

#NEED TO ADD CH4 AND NO2


# Emissions factor value provided by EPA (0.05444) is in terms of kg CO2 per scf
# 1,000 scf = 1 mcf --> utilities report gas delivered to customers in Minnesota in mcf --> 54.44 kg CO2 per mcf
# 1 kg = 2.20462262 lbs --> 
# EPA-provided emissions factor = 120.019655 lbs CO2 per mcf natural gas in 2021
epa_emissionsHub_naturalGas_factor_lbsCO2_perMCF <- 120.019655

# Assuming each row in mn_electricity_data represents a utility's electricity delivery in a county, process and merge data -- this will be a separate data colelction process spanning excel reports submitted to state
processed_mn_gasUtil_activityData <- combined_MNgasUtil_activityData %>%
  mutate(GHG_emissions = mcf_delivered * epa_emissionsHub_naturalGas_factor_lbsCO2_perMCF)

# ADD STATE AND SECTOR
# Aggregate data by county
MNcounty_level_gas_emissions <- processed_mn_gasUtil_activityData %>%
  group_by(county) %>%
  summarise(total_GHG_emissions_lbs = sum(GHG_emissions, na.rm = TRUE),
            total_GHG_emissions_tons = total_GHG_emissions_lbs / 2000)

write_rds(MNcounty_level_gas_emissions,"MNcounty_level_gas_emissions.RDS")
```

Wisconsin data processing

```{r Wisconsin-data}
# WI data is reported in therms delivered. to match MN and the EPA conversion factor, which are reported in mcf, we use the conversion factor supplied by the EIA -- One thousand cubic feet (Mcf) of natural gas equals 1.038 MMBtu, or 10.38 therms. https://www.eia.gov/tools/faqs/faq.php?id=45&t=8

#Midwest Natural Gas Incorporated
#https://apps.psc.wi.gov/PDFfiles/Annual%20Reports/IOU/IOU_2021_3670.pdf

#Northern States Power Company - Wisconsin
#https://apps.psc.wi.gov/PDFfiles/Annual%20Reports/IOU/IOU_2021_4220.pdf

#St Croix Valley Natural Gas Company
#https://apps.psc.wi.gov/PDFfiles/Annual%20Reports/IOU/IOU_2021_5230.pdf

#Wisconsin Gas
#https://apps.psc.wi.gov/PDFfiles/Annual%20Reports/IOU/IOU_2021_6650.pdf


therms_to_MCF <- 1/10.38

combined_WIgasUtil_activityData <- WIutilities_in_scope %>%
  st_drop_geometry(WIutilities_in_scope) %>%
  select(utility_name, county_name) %>%
  mutate(
    # total energy delivered by each utility
    util_total_mcf = case_when(
      utility_name == "Midwest Natural Gas Incorporated" ~ 
        24210191 * therms_to_MCF,
      utility_name == "Northern States Power Company - Wisconsin" ~ 
        203165849 * therms_to_MCF,
      utility_name == "St Croix Valley Natural Gas Company" ~ 
        13266914 * therms_to_MCF,
      utility_name == "Wisconsin Gas" ~ 
        1881722450 * therms_to_MCF
  ),
    #total customers over a utility's entire service territory
    utility_TotalCustomerCount = case_when(
      utility_name == "Midwest Natural Gas Incorporated" ~ 18793,
      utility_name == "Northern States Power Company - Wisconsin" ~ 113012,
      utility_name == "St Croix Valley Natural Gas Company" ~ 9227,
      utility_name == "Wisconsin Gas" ~ 645576,
  ),
    #customers served by each utility in a given county
    utilityCustomer_county = case_when(
      utility_name == "Midwest Natural Gas Incorporated" 
        & county_name == "St. Croix" ~ 5573,
      utility_name == "Northern States Power Company - Wisconsin" 
        & county_name == "Pierce" ~ 107,
      utility_name == "Northern States Power Company - Wisconsin" 
        & county_name == "St. Croix" ~ 15990,
      utility_name == "St Croix Valley Natural Gas Company" 
        & county_name == "Pierce" ~ 5410,
      utility_name == "St Croix Valley Natural Gas Company" 
        & county_name == "St. Croix" ~ 3817,
      utility_name == "Wisconsin Gas" 
        & county_name == "Pierce" ~ 3320,
      utility_name == "Wisconsin Gas" 
        & county_name == "St. Croix" ~ 4252
  ),
    #proportion of customers accounts per county
    propCustomerAccountsInCounty = 
      utilityCustomer_county / utility_TotalCustomerCount,
    #allocate activity data to in-scope counties based on proportion of customers
    mcf_delivered = util_total_mcf * propCustomerAccountsInCounty
)
```

text

```{r county-utilities}

processed_wi_gasUtil_activityData <- combined_WIgasUtil_activityData %>%
  mutate(GHG_emissions = mcf_delivered * epa_emissionsHub_naturalGas_factor_lbsCO2_perMCF)

# Aggregate data by county
WIcounty_level_gas_emissions <- processed_wi_gasUtil_activityData %>%
  group_by(county_name) %>%
  summarise(total_GHG_emissions_lbs = sum(GHG_emissions, na.rm = TRUE),
            total_GHG_emissions_tons = total_GHG_emissions_lbs / 2000)

write_rds(WIcounty_level_gas_emissions,"WIcounty_level_gas_emissions.RDS")
```

text

```{r}
# Directory containing Excel files
dir_mn_electricity <- here("mn_utility_reporting")

# Get list of Excel files in the directory
file_list <- list.files(path = dir_mn_electricity, pattern = "\\.xlsx$", full.names = TRUE)

# Function to process each file
process_file <- function(file_path) {
  utility_name <- tools::file_path_sans_ext(basename(file_path))
  
  # Read specific ranges from the file
  data_A_C <- read_excel(file_path, sheet = "ElectricityByCounty", range = "A12:C56")
  data_E_G <- read_excel(file_path, sheet = "ElectricityByCounty", range = "E12:G53")
  
  # Rename columns
  colnames(data_A_C) <- c("countyCode", "county", "mWh_delivered")
  colnames(data_E_G) <- c("countyCode", "county", "mWh_delivered")
  
  # Combine the data from both ranges
  combined_data <- rbind(data_A_C, data_E_G)
  
  # Filter for specific counties
  combined_data <- combined_data %>% 
    filter(county %in% c("Anoka", "Carver", "Dakota", "Hennepin", "Ramsey", 
                         "Scott", "Sherburne", "Chisago", "Washington"))
  
  # Add utility name
  combined_data$utility <- utility_name
  
  return(combined_data)
}

# Process all files and combine the data
# NOTE -- North Branch data is from 2022, no 2021 data available
combined_MNelectUtil_activityData <- do.call(rbind, lapply(file_list, process_file))


#DELETE after 
# creates table with utility, county, the proportion of the utility's statewide activity data to allocate to the respective utility-county pair
processed_wi_elecUtil_activityData <- st_drop_geometry(WIutilities_in_scope_CensusBlockSums) %>%
  rename(utility_name = utlty_n, 
         countyUtilityPop = sum_value, 
         county_name = cnty_nm) %>%
  #first, prepare county-level allocations of statewide activity data
  left_join(st_drop_geometry(fullElecUtilityServiceAreas_CensusBlockSums) %>%
              rename(utility_name = utlty_nm_x, 
                     totalUtilityPop = sum_value),
            by = "utility_name") %>%
  select(utility_name, county_name, countyUtilityPop, totalUtilityPop) %>%
  mutate(propUtilityPopInCounty = countyUtilityPop / totalUtilityPop) %>%
  mutate(
    util_Total_mWh = case_when(
      utility_name == "Dunn Energy Cooperative" ~ 220809,
      utility_name == "Polk-Burnett Electric Cooperative" ~ 241590,
      utility_name == "New Richmond Municipal Electric Utility" ~ 102201.827,
      utility_name == "River Falls Municipal Utility" ~ 128159.282,
      utility_name == "Northern States Power Company-Wisconsin" ~ 6788131
  ),
    utility_TotalCustomerCount = case_when(
      utility_name == "Dunn Energy Cooperative" ~ 10270,
      utility_name == "Polk-Burnett Electric Cooperative" ~ 21303,
      utility_name == "St Croix Electric Cooperative" ~ 11637,
      utility_name == "Pierce-Pepin Electric Cooperative Services" ~ 7859,
      utility_name == "Northern States Power Company-Wisconsin" ~ 266071,
      utility_name == "River Falls Municipal Utility" ~ 7038,
      utility_name == "New Richmond Municipal Electric Utility" ~ 5333
      
  ),
    utilityCustomer_county = case_when(
      utility_name == "New Richmond Municipal Electric Utility" ~ 5333,
      utility_name == "Northern States Power Company-Wisconsin" 
        & county_name == "Pierce" ~ 7489,
      utility_name == "Northern States Power Company-Wisconsin" 
        & county_name == "St. Croix" ~ 24850,  
      utility_name == "River Falls Municipal Utility" 
        & county_name == "Pierce" ~ 4901,
      utility_name == "River Falls Municipal Utility" 
        & county_name == "St. Croix" ~ 2137
  ),
    propCustomerAccountsInCounty = 
      utilityCustomer_county / utility_TotalCustomerCount,
    EST_propCustomerAccountsInCounty = 
      ifelse(!is.na(utilityCustomer_county), 
      NA, 
      round(propUtilityPopInCounty * utility_TotalCustomerCount)),
    utilityCounty_mWh = 
      ifelse(!is.na(utilityCustomer_county), 
      round(util_Total_mWh * propUtilityPopInCounty), 
      NA),
    mWh_perCustomerAccount = 
      ifelse(!is.na(EST_propCustomerAccountsInCounty),
             NA,
             util_Total_mWh / utility_TotalCustomerCount),
    EST_utilityCounty_mWh = 
      ifelse(is.na(EST_propCustomerAccountsInCounty),
             NA,
             (EST_propCustomerAccountsInCounty / utility_TotalCustomerCount) 
             * util_Total_mWh),
    EST_mWh_perCustomerAccount = 
       ifelse(is.na(EST_propCustomerAccountsInCounty),
             NA,
             EST_utilityCounty_mWh / EST_propCustomerAccountsInCounty),   
  )
```
