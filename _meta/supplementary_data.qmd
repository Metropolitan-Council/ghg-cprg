# Supplementary data
```{r  include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  fig.pos = "H",
  out.width = "100%",
  dpi = 300
)


knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
```
```{r, include=FALSE}
source(file.path(here::here(), "R/_quarto_helpers.R"))
source(file.path(here::here(), "R/_load_pkgs.R"))
source(file.path(here::here(), "R/global_warming_potential.R"))
source(file.path(here::here(), "R/_plotting_helpers.R"))
epa_ghg_factor_hub <- readRDS(file.path(here::here(), "_meta/data/epa_ghg_factor_hub.RDS"))
epa_moves <- readRDS(file.path(here::here(), "_transportation/data/epa_moves.RDS"))

hookaddcap()
```

## Emissions factors {#sec-factors}

Note for solid waste, the global warming potentials used to calculate CO~2~e are sourced AR4, not AR5, like the rest of our inventory. However, documentation for the EPA WARM tool [@usepaWARMManagementPractices2019], indicates that the differences in total CO~2~e emissions is negligible. 

All EPA Emission Factor Hub values were pulled from an Excel workbook downloaded from the EPA website. Values were processed in [epa_ghg_factor_hub.R](data-raw/epa_ghg_factor_hub.R). 


```{r tbl-egrid}
#| tbl-cap: "Electricity emission factors. 2021 EPA GHG Emission Factor Hub, EPA eGRID2019, February 2021."
#| out-width: "95%"

tbl_egrid <- epa_ghg_factor_hub$egrid %>%
  mutate(GHG = str_remove(emission, "lb ")) %>%
  select(
    `eGrid Subregion`,
    `Grid Output` = factor_type,
    GHG,
    `lb GHG per MWh` = value
  ) %>%
  mutate(GHG = case_when(
    GHG == "CO2" ~ "CO₂",
    GHG == "CH4" ~ "CH₄",
    GHG == "N2O" ~ "N₂O",
    GHG == "cf4" ~ "CF₄",
    GHG == "co2_co2_equivalent" ~ "CO₂e",
    GHG == "HFC-152a" ~ GHG
  )) %>%
  gt() %>%
  gt::opt_row_striping() %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels()
  )

tbl_egrid
```

```{r tbl-stationary-combustion}
#| tbl-cap: "Stationary combustion emission factors. 2021 EPA GHG Emission Factor Hub, Federal Register EPA; 40 CFR Part 98."
#| out-width: "95%"

tbl_stationary_combustion <-
  epa_ghg_factor_hub$stationary_combustion %>%
  filter(
    per_unit %in% c(
      "scf",
      "mmBtu"
    ),
    emission != "mmBtu"
  ) %>%
  tidyr::separate_wider_delim(emission,
    delim = " ",
    names = c(
      "Quantity",
      "GHG"
    )
  ) %>%
  mutate(
    Quantity = ifelse(Quantity == "g", "Grams", "Kilograms"),
    GHG = stringr::str_trim(GHG),
    GHG =
      case_when(
        GHG == "CO2" ~ "CO₂",
        GHG == "CH4" ~ "CH₄",
        GHG == "N2O" ~ "N₂O",
        GHG == "cf4" ~ "CF₄",
        GHG == "co2_co2_equivalent" ~ "CO₂e",
        GHG == "HFC-152a" ~ GHG
      )
  ) %>%
  select(`Fuel type`,
    `Fuel category` = fuel_category,
    GHG,
    `GHG Quantity` = Quantity,
    `Unit` = per_unit,
    Value = value
  ) %>%
  group_by(`Fuel category`) %>%
  gt() %>%
  gt::opt_row_striping() %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels()
  )

tbl_stationary_combustion
```

```{r tbl-waste-factors}
#| tbl-cap: "Solid waste emission factors. 2021 EPA GHG Emission Factor Hub, EPA WARM version 15, November 2020."
#| out-width: "95%"

tbl_waste_factors <-
  epa_ghg_factor_hub$waste %>%
  select(Material,
    Method = name,
    `Metric tons CO₂e per short ton material` = value
  ) %>%
  group_by(Method) %>%
  gt() %>%
  gt::opt_row_striping() %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels()
  )

tbl_waste_factors
```

Transportation emissions factors were processed in [epa_moves.R](../_transportation/data-raw/epa_moves.R). Read more about these emission factors in @sec-epa-moves. 

```{r tbl-moves-factors}
#| tbl-cap: "Transportation emissions factors. Source: EPA MOVES"
#| out-width: "95%"
tbl_moves_factors <- epa_moves %>%
  pivot_longer(
    cols = 3:6,
    names_to = "GHG",
    values_to = "Value"
  ) %>%
  mutate(
    `Grams per vehicle mile traveled` = Value,
    Source = paste0("EPA MOVES (", moves_year, ")"),
    GHG = case_when(
      GHG == "co2" ~ "CO₂",
      GHG == "ch4" ~ "CH₄",
      GHG == "n2o" ~ "N₂O",
      GHG == "cf4" ~ "CF₄",
      GHG == "co2_co2_equivalent" ~ "CO₂e",
      GHG == "HFC-152a" ~ GHG
    )
  ) %>%
  select(
    `Vehicle weight` = vehicle_weight,
    GHG,
    `Grams per vehicle mile traveled`
  ) %>%
  group_by(`Vehicle weight`) %>%
  gt() %>%
  gt::opt_row_striping() %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels()
  )

tbl_moves_factors
```

## Global Warming Potential (GWP) {#sec-gwp}

The Global Warming Potential (GWP) was developed to allow comparisons of the global warming impacts of different gases. Specifically, it is a measure of how much energy the emissions of 1 ton of a gas will absorb over a given period of time, relative to the emissions of 1 ton of carbon dioxide (CO~2~). The larger the GWP, the more that a given gas warms the Earth compared to CO2 over that time period [@usepaUnderstandingGlobalWarming2023]. 

<!-- Across all sectors, we used the GWP values established in the Intergovernmental Panel on Climate Change (IPCC) Fifth Assessment Report (AR5), Box 3.2, Table 1 [@ipccClimateChange2014]. We processed these values in [global_warming_potential.R](../R/global_warming_potential.R). -->

Across all sectors, we used the GWP values established in the Intergovernmental Panel on Climate Change (IPCC) 6th Assessment Report (AR6), Table 7.SM.7 [@ipccAR62021]. We processed these values in [global_warming_potential.R](../R/global_warming_potential.R).

```{r tbl-gwp}
#| tbl-cap: "Global Warming Potential (GWP) values"
#| out-width: "95%"
tbl_gwp <- tibble(
  "Gas" = names(gwp),
  "100-year GWP value" = unlist(gwp),
  "Source" = "IPCC AR6 (2021)"
) %>%
  mutate(Gas = case_when(
    Gas == "co2" ~ "CO₂",
    Gas == "ch4" ~ "CH₄",
    Gas == "n2o" ~ "N₂O",
    Gas == "cf4" ~ "CF₄",
    Gas == "HFC-152a" ~ Gas
  )) %>%
  gt() %>%
  gt::opt_row_striping() %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels()
  ) %>%
  gt::tab_footnote(
    "Hydrofluorocarbon-152a, Difluoroethane",
    cells_body(1, 5)
  ) %>%
  gt::as_raw_html()

tbl_gwp
```


## Geographic data

Geographic data were processed in [cprg_geography.R](../R/cprg_geography.R).

### Counties

County data was pulled using `{tigris}`, an R package that downloads TIGER/Line shapefiles from the US Census Bureau [@walkerTigrisLoadCensus2023]. 2021 geographies for Minnesota and Wisconsin were pulled, combined, and saved. 

```{r tbl-cprg-county}
#| tbl-cap: "County geography metadata"
#| out-width: "95%"
cprg_county_meta <- readRDS(file.path(here::here(), "_meta/data/cprg_county_meta.RDS"))

tbl_cprg_county <- cprg_county_meta %>%
  gt() %>%
  gt::opt_row_striping() %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels()
  ) %>%
  gt::as_raw_html()

tbl_cprg_county
```

Additionally, population estimates were obtained from the American Community Survey 5-Year estimates (2017-2021) using `{tidycensus}` [@Census2022ACSDP1Y2022.DP05].

```{r tbl-cprg-population}
#| tbl-cap: "County population metadata"
#| out-width: "95%"
cprg_population <- readRDS(file.path(here::here(), "_meta/data/cprg_population_meta.RDS"))

tbl_cprg_pop <- cprg_population %>%
  gt() %>%
  gt::opt_row_striping() %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels()
  ) %>%
  gt::as_raw_html()

tbl_cprg_pop
```

### Cities

Minnesota cities, townships, and unorganized territories were imported from [Minnesota Geospatial Commons](https://gisdata.mn.gov/dataset/bdry-mn-city-township-unorg) [@mndotCityTownshipUnorganized2023]. 

Wisconsin cities, towns, and villages were imported from Wisconsin's Legislative Technology Services Bureau [@wisconsinlegislatureWisconsinCitiesTowns2023]. 

Data from both states was then combined and filtered to include only the workplan area counties.

```{r tbl-cprg-ctu}
#| tbl-cap: "City geography metadata"
#| out-width: "95%"
cprg_ctu_meta <- readRDS(file.path(here::here(), "_meta/data/cprg_ctu_meta.RDS"))

tbl_cprg_ctu <- cprg_ctu_meta %>%
  gt() %>%
  gt::opt_row_striping() %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels()
  ) %>%
  gt::as_raw_html()

tbl_cprg_ctu
```


```{r echo=FALSE}
caption_index <- readRDS(file.path(here::here(), "caption_index.RDS"))
caption_index <- as.character(as.numeric(caption_index) + 1) %>% stringr::str_pad(width = 2, side = "left", pad = "0")
saveCap(paste0("cap-", caption_index))
saveRDS(caption_index, file.path(here::here(), "caption_index.RDS"))
```
{{< pagebreak >}}
