# Mobile combustion  
```{r  include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  fig.pos = "H",
  out.width = "100%",
  dpi = 300
)


knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
```
```{r, include=FALSE}
source(file.path(here::here(), "R/_quarto_helpers.R"))
source(file.path(here::here(), "R/_load_pkgs.R"))
source(file.path(here::here(), "R/_plotting_helpers.R"))

vmt_emissions <- readRDS(file.path(here::here(), "_transportation/data/county_vmt_emissions.RDS"))
vmt_emissions_all <- vmt_emissions %>%
  group_by(zone) %>%
  summarise(
    vmt_total = sum(vmt_total),
    vmt_same = sum(vmt_same),
    emissions_metric_tons_co2e = sum(emissions_metric_tons_co2e)
  )

county_emissions <- readRDS(file.path(here::here(), "_meta/data/cprg_county_emissions.RDS"))

county_emissions_summary <- county_emissions %>%
  group_by(sector, category, source, data_source, factor_source) %>%
  summarize(
    emissions_metric_tons_co2e = sum(emissions_metric_tons_co2e),
    .groups = "keep"
  )

hookaddcap()
```

## Introduction

This is the transportation section for estimating on-road emissions. 

Note that this does not include buses, trains, freight rail, light rail, and other transportation emissions.

## Methods

The general workflow for transportation emissions is to find vehicle miles traveled for a given geography, 

$$Emissions = miles \times \frac{\text{GHG grams}}{mile}$$

### Vehicle Miles Traveled      

To find the estimated number of vehicle miles traveled (VMT), we used the estimated number of vehicles and the average trip length in miles for all origin - destination pairs and vehicle types (passenger, medium-duty, and heavy-duty). VMT is calculated as follows:

$$VMT = trips \times length$$
where 

$$trips = \text{number of trips}$$
$$length = \text{average trip length in miles}$$

### Emissions factors

You can read more about emissions factors we used in @sec-epa-moves. 

$$Emissions=\frac{1}{2}T_{o} + \frac{1}{2}T_{d}  + T{_s}$$

where

$$T_o=\textrm{grams of emissions for each GHG from all trips originating in the county}$$

$$T_d=\textrm{grams of emissions for each GHG from all trips ending in the county}$$ 

and 

$$T_s=\textrm{grams of emissions for each GHG for trips originating and ending within the county}$$ 

Transportation VMT and emissions were calculated in [vmt_emissions.R](data-raw/vmt_emissions.R), using functions [`calculate_emissions()`](data-raw/_calculate_emissions.R) and [`calculate_vmt()`](data-raw/_calculate_vmt.R).  

## Results

```{r fig-transportation-county-emissions}
#| fig-cap: "Transportation county emissions"
#| out-width: "95%"
fig_transportation_county_emissions <- plot_county_sector_emissions(county_emissions,
  .sector = "Transportation",
  .plotly_source = "fig-transportation-county-emissions"
)
fig_transportation_county_emissions
```

We can also view this data broken out by vehicle weight in @fig-transportation-county-emissions-by-weight. 


```{r fig-transportation-county-emissions-by-weight}
#| fig-cap: "2021 annual emissions by vehicle weight"
#| out-width: "95%"

fig_transportation_county_emissions_by_weight <- plot_ly(
  type = "bar",
  source = "fig-transportation-county-emissions-by-weight",
  data = vmt_emissions,
  y = ~ reorder(zone, emissions_metric_tons_co2e),
  x = ~emissions_metric_tons_co2e,
  color = ~vehicle_weight_label,
  colors = unlist(vehicle_weight_colors),
  hovertemplate = ~ paste0(
    zone, " County", "<br>",
    vehicle_weight_label, "<br>",
    round(emissions_metric_tons_co2e * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  )
) %>%
  plotly_layout(
    main_title = "2021 annual emissions by vehicle weight",
    subtitle = "",
    y_title = "County",
    x_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Vehicle weight"
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    )
  )
fig_transportation_county_emissions_by_weight
```


### Correlation with related data

We would expect counties with higher population to have higher emissions and VMT.

```{r fig-emissions-population-transportation}
#| fig-cap: "County population and transportation emissions"
#| out-width: "95%"
cprg_population <- readRDS(file.path(here::here(), "_meta/data/cprg_population.RDS"))
vmt_population <- left_join(vmt_emissions_all, cprg_population,
  by = c("zone" = "NAME")
)

fig_emissions_pop_transportation <- plot_ly(
  data = vmt_population,
  source = "fig-emissions-population-transportation",
  x = ~population,
  y = ~emissions_metric_tons_co2e,
  type = "scatter",
  mode = "markers",
  hovertemplate = ~ paste0(
    zone, " County", "<br>",
    "Population: ", scales::comma(population), "<br>",
    "Emissions: ", round(emissions_metric_tons_co2e * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  ),
  marker = list(
    color = colors$councilBlue,
    size = 18,
    line = list(
      color = "lightgray",
      width = 2
    )
  )
) %>%
  plotly_layout(
    main_title = "County population and emissions",
    subtitle = "2021 ACS 5-year population estimates. Strong positive correlation",
    x_title = "Total population",
    y_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "",
    legend = list(orientation = "h")
  )

fig_emissions_pop_transportation
```

### Comparison with other inventories

### Activity-induced and geographic calculation approaches

Different allocation principle

Though both geographic and activity-induced methods fulfill Scope 1 requirements [@fongGlobalProtocolCommunityScale2021], the resulting values are significantly different.

Activity-induced methods (as we have used here) estimate the emissions from trips that begin, end, or are entirely contained within a given city. All passthrough trips (those that neither begin or end in the city, but pass through without stopping) are excluded. 

Territorial or geographic methods represent "all traffic occurring within city boundaries, regardless of origin or destination" [@fongGlobalProtocolCommunityScale2021]. 

The GPC recommends the induced activity method for cities, as it provides results more suited to local policy making. 

However, the Twin Cities metropolitan area includes over 250 individual jurisdictions, with cities ranging from over 400,000 people to under 500 people. The entirety of the 11-county CPRG study area is larger than some US states. 


The origin-destination activity method is used in regional PCAPs, including metro areas such as Santa Clara MSA [@countyofsanbenitoCountySanBenito2024], 

#### National Emissions Inventory 

The National Emissions Inventory (NEI) is a comprehensive and detailed estimate of air emissions of criteria pollutants, criteria precursors, and hazardous air pollutants from air emissions sources. The county-level GHG emissions included in the NEI for this category are calculated by running the MOVES model with State-, Local-, and Tribal-submitted activity data and EPA-developed activity inputs based on data from FHWA and other sources [@usepa2020NationalEmissions2023]. 

NEI data were pulled using the [EnviroFacts](https://enviro.epa.gov/) API and processed in R scripts: [epa_nei.R](../_meta/data-raw/epa_nei.R) and [epa_nei_envirofacts.R](data-raw/epa_nei_envirofacts.R)

```{r read-nei}
epa_nei <- readRDS(file.path(here::here(), "_transportation/data/epa_nei_envirofacts.RDS"))

nei_emissions_all <- epa_nei %>%
  filter(nei_inventory_year == 2020) %>%
  group_by(zone = county_name) %>%
  summarize(
    emissions_metric_tons_co2e = sum(emissions_metric_tons_co2e)
  )
```

We expect that the NEI data will show higher emissions, because it is based on overall activity, not explicit origin-destination travel. 

```{r fig-emissions-council-nei}
#| fig-cap: "Council county emissions estimate correlation with NEI estimate"
#| out-width: "95%"

nei_cprg_combine <- left_join(
  vmt_emissions_all %>%
    mutate(cprg_emissions = emissions_metric_tons_co2e) %>%
    select(-emissions_metric_tons_co2e),
  nei_emissions_all %>%
    mutate(nei_emissions = emissions_metric_tons_co2e) %>%
    select(-emissions_metric_tons_co2e)
)

fig_nei_council_emissions <- plot_ly(
  data = nei_cprg_combine,
  source = "fig-nei-council-emissions",
  x = ~nei_emissions,
  y = ~cprg_emissions,
  type = "scatter",
  mode = "markers",
  hovertemplate = ~ paste0(
    zone, " County", "<br>",
    "NEI estimate: ", round(nei_emissions * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "Met Council estimate: ", round(cprg_emissions * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  ),
  marker = list(
    color = colors$councilBlue,
    size = 18,
    line = list(
      color = "lightgray",
      width = 2
    )
  )
) %>%
  plotly_layout(
    main_title = "Calculated county emissions correlation with NEI emissions",
    # subtitle = "2021 ACS 5-year population estimates. Strong positive correlation",
    x_title = "NEI estimate (metric tons CO<sub>2</sub>e)",
    y_title = "Met Council estimate (metric tons CO<sub>2</sub>e)",
    legend_title = "",
    legend = list(orientation = "h")
  )

fig_nei_council_emissions
```


```{r fig-activity-vs-nei}
#| fig-cap: "County estimated emissions, NEI and calculated"
#| out-width: "95%"

fig_activity_vs_nei <- plot_ly(
  data = vmt_emissions_all,
  source = "fig-activity-vs-nei",
  x = ~ reorder(zone, -emissions_metric_tons_co2e),
  y = ~emissions_metric_tons_co2e,
  type = "scatter",
  mode = "markers",
  name = "2021 Met Council estimate",
  hovertemplate = ~ paste0(
    zone, " County<br>",
    "Council estimate: ", round(emissions_metric_tons_co2e * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  ),
  opacity = 0.8,
  marker = list(
    color = colors$councilBlue,
    size = 18,
    line = list(
      color = "lightgray",
      width = 2
    )
  )
) %>%
  add_trace(
    data = nei_emissions_all,
    name = "2020 NEI on-road estimate",
    marker = list(
      color = cprg_colors$cprg_da_yellow,
      size = 18,
      line = list(
        color = "lightgray",
        width = 2
      )
    ),
    hovertemplate = ~ paste0(
      zone, " County<br>",
      "NEI estimate: ", round(emissions_metric_tons_co2e * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
      "<extra></extra>"
    )
  ) %>%
  plotly_layout(
    main_title = "County estimated vehicle emissions by data source",
    subtitle = "", # "2020 NEI, all on-road emissions",
    x_title = "County",
    y_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Data source"
  )

fig_activity_vs_nei
```




#### Local Greenhouse Gas Inventory Tool (LGGIT) {#sec-epa-lggit-transportation}

EPA’s Local Greenhouse Gas Inventory Tool (LGGIT) was developed to help communities across the United States to evaluate their greenhouse gas emissions. We used the LGGIT to validate our calculations and datasets [@usepaLocalGreenhouseGas2017].

We used the LGGIT Excel workbook tool with the following inputs in the "Mobile-Data" sheet. Several calculations and assumptions were made

- Passenger VMT was split between gasoline and diesel powered vehicles based on regional fleet composition in the Travel Behavior Inventory (TBI).
- Passenger vehicle age was determined from the median vehicle model year in the TBI. See @sec-regional-fleet for more detail.
- Fuel consumption was calculated by dividing VMT by average vehicle miles per gallon (MPG), specific to vehicle type and fuel type.
- Fuel efficiency data were taken from the LGGIT tool and verified with the EPA Emission Factors Hub (2021 edition) [@usepaGHGEmissionFactors2021].  
- All medium-duty VMT were classified as "Light Truck", while all heavy-duty VMT were classified as "Heavy-Duty Vehicle".  
- Commercial trucks were assumed to be year 2007, based on a 2018 report that found the average age of trucks in the US to be 14.2 years [@brusseauAgingTrucksCreate2019] (`2021 - 14 = 2007`).   


LGGIT entries and resulting output tables were generated and processed in [epa_lggit.R](data-raw/epa_lggit.R). 


```{r tbl-lggit-entries}
#| tbl-cap: "Mobile data entered into LGGIT"
#| out-width: "95%"
lggit_vmt_entries <- readRDS(file.path(here::here(), "_transportation/data-raw/epa/lggit_vmt_entries.RDS"))

tbl_lggit_entries <- lggit_vmt_entries %>%
  gt() %>%
  gt::opt_row_striping() %>%
  fmt_number(8:9, decimals = 0) %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels()
  ) %>%
  gt::as_raw_html()

tbl_lggit_entries
```


```{r lggit-calculations}
cprg_total_emiss <- vmt_emissions_all %>%
  ungroup() %>%
  summarise(emissions_metric_tons_co2e = sum(emissions_metric_tons_co2e)) %>%
  magrittr::extract2("emissions_metric_tons_co2e") %>%
  scales::comma()

lggit_totals <- readRDS(file.path(here::here(), "_transportation/data-raw/epa/lggit_totals.RDS"))

lggit_total_emiss <- (lggit_totals$total %>% sum()) %>% scales::comma()
```

The results from the LGGIT tool estimate a regional emissions total of **`r lggit_total_emiss` metric tons CO~2~e**, while our calculations estimate **`r cprg_total_emiss` metric tons CO~2~e**. These values are sufficiently close, and may be explained by differences between nationwide vehicle emission rates and fuel efficiency and region-specific values from EPA MOVES. Additionally, LGGIT uses global warming potential (GWP) values from the Intergovernmental Panel on Climate Change (IPCC) Fifth Assessment Report (AR5) [@ipccClimateChange2014], while our calculations use slightly higher values from the 6th Assessment Report (AR6) [@ipccAR62021]. See @sec-epa-moves for a more detailed comparison.


```{r echo=FALSE}
caption_index <- readRDS(file.path(here::here(), "caption_index.RDS"))
caption_index <- as.character(as.numeric(caption_index) + 1) %>% stringr::str_pad(width = 2, side = "left", pad = "0")
saveCap(paste0("cap-", caption_index))
saveRDS(caption_index, file.path(here::here(), "caption_index.RDS"))
```

{{< pagebreak >}}

