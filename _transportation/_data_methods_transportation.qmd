# Methods and data sources  

```{r  include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  fig.pos = "H",
  out.width = "100%",
  dpi = 300
)


knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
```

```{r include=FALSE}
source(file.path(here::here(), "R/_quarto_helpers.R"))
source(file.path(here::here(), "R/_load_pkgs.R"))
source(file.path(here::here(), "R/_plotting_helpers.R"))
hookaddcap()
```

## Methodological framework

We are following these guidelines:

## Data sources

{{< include data_epa_nei.qmd >}}

{{< include data_streetlight.qmd >}}

{{< include data_state_dot.qmd >}}

{{< include data_epa_moves.qmd >}}

{{< include data_tbi.qmd >}}

## Validation

### Correlation with related data

We would expect counties with higher population to have higher emissions and VMT.

```{r fig-emissions-population-transportation}
#| fig-cap: "County population and transportation emissions"
#| out-width: "95%"
cprg_population <- readRDS(file.path(here::here(), "_meta/data/cprg_population.RDS"))
vmt_population <- left_join(vmt_emissions_all, cprg_population,
  by = c("zone" = "NAME")
)

fig_emissions_pop_transportation <- plot_ly(
  data = vmt_population,
  source = "fig-emissions-population-transportation",
  x = ~population,
  y = ~emissions_metric_tons_co2e,
  type = "scatter",
  mode = "markers",
  hovertemplate = ~ paste0(
    zone, " County", "<br>",
    "Population: ", scales::comma(population), "<br>",
    "Emissions: ", round(emissions_metric_tons_co2e * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  ),
  marker = list(
    color = colors$councilBlue,
    size = 18,
    line = list(
      color = "lightgray",
      width = 2
    )
  )
) %>%
  plotly_layout(
    main_title = "County population and emissions",
    subtitle = "2021 ACS 5-year population estimates. Strong positive correlation",
    x_title = "Total population",
    y_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "",
    legend = list(orientation = "h")
  )

fig_emissions_pop_transportation
```

### Comparison with other inventories

#### National Emissions Inventory 

The National Emissions Inventory (NEI) is a comprehensive and detailed estimate of air emissions of criteria pollutants, criteria precursors, and hazardous air pollutants from air emissions sources. The county-level GHG emissions included in the NEI for this category are calculated by running the MOVES model with State-, Local-, and Tribal-submitted activity data and EPA-developed activity inputs based on data from FHWA and other sources [@usepa2020NationalEmissions2023]. 

NEI data were pulled using the [EnviroFacts](https://enviro.epa.gov/) API and processed in R scripts: [epa_nei.R](../_meta/data-raw/epa_nei.R) and [epa_nei_envirofacts.R](data-raw/epa_nei_envirofacts.R)

```{r read-nei}
epa_nei <- readRDS(file.path(here::here(), "_transportation/data/epa_nei_envirofacts.RDS"))

nei_emissions_all <- epa_nei %>%
  filter(nei_inventory_year == 2020) %>%
  group_by(zone = county_name) %>%
  summarize(
    emissions_metric_tons_co2e = sum(emissions_metric_tons_co2e)
  )
```

We expect that the NEI data will show higher emissions, because it is based on overall activity, not explicit origin-destination travel. 

```{r fig-emissions-council-nei}
#| fig-cap: "Council county emissions estimate correlation with NEI estimate"
#| out-width: "95%"

nei_cprg_combine <- left_join(
  vmt_emissions_all %>%
    mutate(cprg_emissions = emissions_metric_tons_co2e) %>%
    select(-emissions_metric_tons_co2e),
  nei_emissions_all %>%
    mutate(nei_emissions = emissions_metric_tons_co2e) %>%
    select(-emissions_metric_tons_co2e)
)

fig_nei_council_emissions <- plot_ly(
  data = nei_cprg_combine,
  source = "fig-nei-council-emissions",
  x = ~nei_emissions,
  y = ~cprg_emissions,
  type = "scatter",
  mode = "markers",
  hovertemplate = ~ paste0(
    zone, " County", "<br>",
    "NEI estimate: ", round(nei_emissions * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "Met Council estimate: ", round(cprg_emissions * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  ),
  marker = list(
    color = colors$councilBlue,
    size = 18,
    line = list(
      color = "lightgray",
      width = 2
    )
  )
) %>%
  plotly_layout(
    main_title = "Calculated county emissions correlation with NEI emissions",
    # subtitle = "2021 ACS 5-year population estimates. Strong positive correlation",
    x_title = "NEI estimate (metric tons CO<sub>2</sub>e)",
    y_title = "Met Council estimate (metric tons CO<sub>2</sub>e)",
    legend_title = "",
    legend = list(orientation = "h")
  )

fig_nei_council_emissions
```


```{r fig-activity-vs-nei}
#| fig-cap: "County estimated emissions, NEI and calculated"
#| out-width: "95%"

fig_activity_vs_nei <- plot_ly(
  data = vmt_emissions_all,
  source = "fig-activity-vs-nei",
  x = ~ reorder(zone, -emissions_metric_tons_co2e),
  y = ~emissions_metric_tons_co2e,
  type = "scatter",
  mode = "markers",
  name = "2021 Met Council estimate",
  hovertemplate = ~ paste0(
    zone, " County<br>",
    "Council estimate: ", round(emissions_metric_tons_co2e * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  ),
  opacity = 0.8,
  marker = list(
    color = colors$councilBlue,
    size = 18,
    line = list(
      color = "lightgray",
      width = 2
    )
  )
) %>%
  add_trace(
    data = nei_emissions_all,
    name = "2020 NEI on-road estimate",
    marker = list(
      color = cprg_colors$cprg_da_yellow,
      size = 18,
      line = list(
        color = "lightgray",
        width = 2
      )
    ),
    hovertemplate = ~ paste0(
      zone, " County<br>",
      "NEI estimate: ", round(emissions_metric_tons_co2e * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
      "<extra></extra>"
    )
  ) %>%
  plotly_layout(
    main_title = "County estimated vehicle emissions by data source",
    subtitle = "", # "2020 NEI, all on-road emissions",
    x_title = "County",
    y_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Data source"
  )

fig_activity_vs_nei
```




#### Local Greenhouse Gas Inventory Tool (LGGIT) {#sec-epa-lggit-transportation}

EPAâ€™s Local Greenhouse Gas Inventory Tool (LGGIT) was developed to help communities across the United States to evaluate their greenhouse gas emissions. We used the LGGIT to validate our calculations and datasets [@usepaLocalGreenhouseGas2017].

We used the LGGIT Excel workbook tool with the following inputs in the "Mobile-Data" sheet. Several calculations and assumptions were made

- Passenger VMT was split between gasoline and diesel powered vehicles based on regional fleet composition in the Travel Behavior Inventory (TBI).
- Passenger vehicle age was determined from the median vehicle model year in the TBI. See @sec-regional-fleet for more detail.
- Fuel consumption was calculated by dividing VMT by average vehicle miles per gallon (MPG), specific to vehicle type and fuel type.
- Fuel efficiency data were taken from the LGGIT tool and verified with the EPA Emission Factors Hub (2021 edition) [@usepaGHGEmissionFactors2021].  
- All medium-duty VMT were classified as "Light Truck", while all heavy-duty VMT were classified as "Heavy-Duty Vehicle".  
- Commercial trucks were assumed to be year 2007, based on a 2018 report that found the average age of trucks in the US to be 14.2 years [@brusseauAgingTrucksCreate2019] (`2021 - 14 = 2007`).   


LGGIT entries and resulting output tables were generated and processed in [epa_lggit.R](data-raw/epa_lggit.R). 


```{r tbl-lggit-entries}
#| tbl-cap: "Mobile data entered into LGGIT"
#| out-width: "95%"
lggit_vmt_entries <- readRDS(file.path(here::here(), "_transportation/data-raw/epa/lggit_vmt_entries.RDS"))

tbl_lggit_entries <- lggit_vmt_entries %>%
  gt() %>%
  gt::opt_row_striping() %>%
  fmt_number(8:9, decimals = 0) %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels()
  ) %>%
  gt::as_raw_html()

tbl_lggit_entries
```


```{r lggit-calculations}
cprg_total_emiss <- vmt_emissions_all %>%
  ungroup() %>%
  summarise(emissions_metric_tons_co2e = sum(emissions_metric_tons_co2e)) %>%
  magrittr::extract2("emissions_metric_tons_co2e") %>%
  scales::comma()

lggit_totals <- readRDS(file.path(here::here(), "_transportation/data-raw/epa/lggit_totals.RDS"))

lggit_total_emiss <- (lggit_totals$total %>% sum()) %>% scales::comma()
```

The results from the LGGIT tool estimate a regional emissions total of **`r lggit_total_emiss` metric tons CO~2~e**, while our calculations estimate **`r cprg_total_emiss` metric tons CO~2~e**. These values are sufficiently close, and may be explained by differences between nationwide vehicle emission rates and fuel efficiency and region-specific values from EPA MOVES. Additionally, LGGIT uses global warming potential (GWP) values from the Intergovernmental Panel on Climate Change (IPCC) Fifth Assessment Report (AR5) [@ipccClimateChange2014], while our calculations use slightly higher values from the 6th Assessment Report (AR6) [@ipccAR62021]. See @sec-epa-moves for a more detailed comparison.


```{r echo=FALSE}
caption_index <- readRDS(file.path(here::here(), "caption_index.RDS"))
caption_index <- as.character(as.numeric(caption_index) + 1) %>% stringr::str_pad(width = 2, side = "left", pad = "0")
saveCap(paste0("cap-", caption_index))
saveRDS(caption_index, file.path(here::here(), "caption_index.RDS"))
```

{{< pagebreak >}}


```{r echo=FALSE}
caption_index <- readRDS(file.path(here::here(), "caption_index.RDS"))
caption_index <- as.character(as.numeric(caption_index) + 1) %>% stringr::str_pad(width = 2, side = "left", pad = "0")
saveCap(paste0("cap-", caption_index))
saveRDS(caption_index, file.path(here::here(), "caption_index.RDS"))
```
{{< pagebreak >}}
