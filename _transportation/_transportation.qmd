# Mobile combustion  
```{r  include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  fig.pos = "H",
  out.width = "100%",
  dpi = 300
)


knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
```
```{r, include=FALSE}
source(file.path(here::here(), "R/_quarto_helpers.R"))
source(file.path(here::here(), "R/_load_pkgs.R"))
source(file.path(here::here(), "R/_plotting_helpers.R"))

# vmt_emissions <- readRDS(file.path(here::here(), "_transportation/data/county_vmt_emissions.RDS"))
# vmt_emissions_all <- vmt_emissions %>%
#   group_by(zone) %>%
#   summarise(
#     vmt_total = sum(vmt_total),
#     vmt_same = sum(vmt_same),
#     emissions_metric_tons_co2e = sum(emissions_metric_tons_co2e)
#   )


onroad_emissions <- readRDS(file.path(here::here(), "_transportation/data/onroad_emissions.RDS"))

county_emissions <- readRDS(file.path(here::here(), "_meta/data/cprg_county_emissions.RDS"))

county_emissions_summary <- county_emissions %>%
  group_by(sector, category, source, data_source, factor_source) %>%
  summarize(
    emissions_metric_tons_co2e = sum(emissions_metric_tons_co2e),
    .groups = "keep"
  )

transportation_current_year <- county_emissions %>%
  filter(sector == "Transportation") %>%
  filter(year == max(.$year)) %>%
  extract2("year") %>%
  unique()


modes_included <-
  stringr::str_split(onroad_emissions$vehicle_types_included, pattern = ", ", simplify = TRUE)[, 1] %>%
  unique() %>%
  stringr::str_to_lower()

hookaddcap()
```

## Introduction

Transportation emissions, when grouped together, are one of the largest sources of greenhouse gas emissions nationally, statewide, and locally. [more information here on transportation emissions, what is included/not included, ]

This is the transportation section for estimating on-road emissions. Modes included are `r listify(modes_included)`. 

Note that this does not include freight rail, light rail, and other transportation emissions.

## Results

```{r fig-transportation-county-emissions}
#| fig-cap: `{r} paste0(transportation_current_year, " onroad transportation emissions by county")`
#| out-width: "95%"
fig_transportation_county_emissions <- plot_county_sector_emissions(
  county_emissions %>%
    filter(year == transportation_current_year),
  .sector = "Transportation",
  .plotly_source = "fig-transportation-county-emissions"
)
fig_transportation_county_emissions
```

We can also view this data broken out by vehicle weight in @fig-transportation-county-emissions-by-weight. 


```{r fig-transportation-county-emissions-by-weight}
#| fig-cap: `{r} paste0(transportation_current_year, " annual emissions by vehicle weight")`
#| out-width: "95%"

fig_transportation_county_emissions_by_weight <- plot_ly(
  type = "bar",
  source = "fig-transportation-county-emissions-by-weight",
  data = onroad_emissions %>% 
    filter(emissions_year == transportation_current_year),
  y = ~reorder(county_name, emissions_metric_tons_co2e),
  x = ~emissions_metric_tons_co2e,
  color = ~vehicle_weight_label,
  colors = unlist(vehicle_weight_colors),
  hovertemplate = ~ paste0(
    county_name, " County", "<br>",
    vehicle_weight_label, "<br>",
    round(emissions_metric_tons_co2e * 1e-6, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  )
) %>%
  plotly_layout(
    main_title = paste0(transportation_current_year, " annual emissions by vehicle weight"),
    subtitle = "",
    y_title = "County",
    x_title = "Metric tons CO<sub>2</sub>e",
    legend_title = "Vehicle weight"
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    )
  )
fig_transportation_county_emissions_by_weight
```


### Activity-induced and geographic calculation approaches

Different allocation principle

Though both geographic and activity-induced methods fulfill Scope 1 requirements [@fongGlobalProtocolCommunityScale2021], the resulting values are significantly different.

Activity-induced methods (as we have used here) estimate the emissions from trips that begin, end, or are entirely contained within a given city. All passthrough trips (those that neither begin or end in the city, but pass through without stopping) are excluded. 

Territorial or geographic methods represent "all traffic occurring within city boundaries, regardless of origin or destination" [@fongGlobalProtocolCommunityScale2021]. 

The GPC recommends the induced activity method for cities, as it provides results more suited to local policy making. 

However, the Twin Cities metropolitan area includes over 250 individual jurisdictions, with cities ranging from over 400,000 people to under 500 people. The entirety of the 11-county CPRG study area is larger than some US states. 


The origin-destination activity method is used in regional PCAPs, including metro areas such as Santa Clara MSA [@countyofsanbenitoCountySanBenito2024], 

