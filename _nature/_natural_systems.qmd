# Natural Systems
```{r  include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  fig.pos = "H",
  out.width = "100%",
  dpi = 300
)


knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
source(file.path(here::here(), "R/_quarto_helpers.R"))
source(file.path(here::here(), "R/_load_pkgs.R"))
source(file.path(here::here(), "R/_plotting_helpers.R"))

library(tidyterra)
library(terra)

county_emissions <- readRDS(file.path(here::here(), "_meta/data/cprg_county_emissions.RDS"))

worldcover_msa <- unwrap(read_rds(here(
  "_nature", "data", "worldcover_msa.rds"
)))

cprg_county <- read_rds(here(
  "_meta", "data", "cprg_county.RDS"))

crs_use <- terra::crs(worldcover_msa)

nlcd_lc <- get_nlcd(
  cprg_county,
  'county',
  year = 2021,
  dataset = 'landcover') %>% 
  project(.,crs_use) %>% 
  mask(cprg_county)

nlcd_is <- get_nlcd(
  cprg_county,
  'county',
  year = 2021,
  dataset = 'impervious') %>% 
  project(.,crs_use) %>% 
  mask(cprg_county)

hookaddcap()
```


```{r, include = FALSE}
#| fig-cap: "European Space Agency WorldCover land classification"
#| out-width: "95%"
# | include: false
# all figure chunks should be named "fig-{plot-desc}"


### create class conversion table (couldn't get ESA to output this info which would be cleaner)
code_class_tab <- data.frame(old_lab = c(10, 20, 30, 40, 50, 60, 70, 80, 90),
                             esa_label = c('Tree','Shrubland','Grassland','Cropland','Built-up','Bare','Snow','Water','Wetland'))
#create color palette for mapping - this may be exported to qmd files later
esa_color <- c('forestgreen','brown4','yellow2','wheat3','red','plum','lightblue','navy','mediumturquoise')

library(tidyterra)
worldcover_msa_map <- ggplot() + geom_spatraster(data= as.factor(worldcover_msa)) +
  scale_fill_manual(breaks = code_class_tab$old_lab,
                    labels = code_class_tab$esa_label,
                    values=esa_color,
                    na.value="white",
                    name = 'WorldCover Land Cover') + theme_void()

nlcd_msa_map <- ggplot() + geom_spatraster(data= nlcd_lc) +
  guides(fill=guide_legend(title="NLCD Land Cover")) +
  theme_void()

imperv_msa_map <- ggplot() +
  geom_spatraster(data= nlcd_is, na.rm = TRUE) +
  geom_spatvector(data = cprg_county, fill= NA) +
  scale_fill_gradient(low = 'pink', high = 'firebrick4', na.value = 'white') +
  guides(fill=guide_legend(title="NLCD Impervious Cover")) +
  theme_void()


```


### Introduction

Natural systems are a critical component of capturing carbon from the atmosphere and sequestering it in biomass and terrestrial soils. Photosynthesis is central mechanism of this process and vegetation is therefore the focal land cover classification for quantifying the potential for regions to both sequester and store carbon. Different vegetation ecosystems have varying capacities for carbon capture and this work focuses on five broad classifications: urban trees, urban grasslands (turf grass), forests, natural grasslands, and wetlands. The distinction between tree and grassland cover in developed areas (i.e. urban) is important as despite having similar sequestration rates, these systems are generally understood to have smaller storage capacities. The preservation and restoration of natural systems will be a key tool in limiting atmospheric greenhouse gases.

### Methods
  
The approach for calculating carbon sequestration potential for a given geography, j, is,
$$Sequestration_j = \Sigma (area_i \times {SequestrationRate_i}) $$
where *i* is land cover classification. The sequestration rate is based on midwest specific sequestration rate estimates found in the primary scientific literature (REFERENCE TABLE). 

#### Land cover classification

Land cover was determined by using the European Space Agencies 2021 WorldCover, a 10 m resolution satellite data product, in combination with USGS's National Land Cover Dataset (NLCD). These datasets complement each other as WorldCover provides finer spatial resolution and classifies green spaces within urban areas, whereas the NLCD products can split and downscale green space area in developed lands from those in non-developed lands, offering an important distinction between carbon sequestration and stock capacities. Specifically the NLCD 'Developed' land classification was used to assign the 'urban' label to WorldCover tree and grassland cells, and the NLCD impervious cover layer was used to correct the area of urban trees in WorldCover, which otherwise classifies any cell with >10% tree cover as 100% tree.


```{r fig-esa-worldcover}
#| fig-cap: "European Space Agency WorldCover"
#| out-width: "95%"
# | include: false
# all figure chunks should be named "fig-{plot-desc}"

worldcover_msa_map

```


```{r fig-nlcd-classification}
#| fig-cap: "USGS National Land Cover Database"
#| out-width: "95%"
# | include: false
# all figure chunks should be named "fig-{plot-desc}"

nlcd_msa_map

```

```{r fig-nlcd-impervious-cover}
#| fig-cap: "USGS National Land Cover Database - Impervious Cover"
#| out-width: "95%"
# | include: false
# all figure chunks should be named "fig-{plot-desc}"

imperv_msa_map

```

```{r fig-ns-county-sequestration}
#| fig-cap: "2021 county electricity emissions"
#| out-width: "95%"

fig_ns_county_sequestration <- plot_ly(
  type = "bar",
  source = "fig-ns-county-sequestration",
  data = county_emissions %>%
    filter(category == "Sequestration"),
  y = ~ reorder(geog_name, emissions_metric_tons_co2e),
  x = ~emissions_metric_tons_co2e,
  color = ~source,
  colors = unlist(source_colors),
  hovertemplate = ~ paste0(
    geog_name, "<br>",
    source, "<br>",
    round(emissions_metric_tons_co2e / 1000000, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  )
) %>%
  plotly_layout(
    main_title = "2021 county natural system sequestration",
    x_title = "Metric tons CO<sub>2</sub>e",
    subtitle = ""
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    )
  )

fig_ns_county_sequestration
```
{{< pagebreak >}}


```{r fig-ns-county-stock}
#| fig-cap: "2021 county electricity emissions"
#| out-width: "95%"

fig_ns_county_stock <- plot_ly(
  type = "bar",
  source = "fig-ns-county-sequestration",
  data = county_emissions %>%
    filter(category == "Stock"),
  y = ~ reorder(geog_name, emissions_metric_tons_co2e),
  x = ~emissions_metric_tons_co2e,
  color = ~source,
  colors = unlist(source_colors),
  hovertemplate = ~ paste0(
    geog_name, "<br>",
    "Natural Systems", "<br>",
    round(emissions_metric_tons_co2e / 1000000, digits = 2), " million metric tons CO<sub>2</sub>e", "<br>",
    "<extra></extra>"
  )
) %>%
  plotly_layout(
    main_title = "2021 county natural system stock potential",
    x_title = "Metric tons CO<sub>2</sub>e",
    subtitle = ""
  ) %>%
  layout(
    barmode = "stack",
    legend = list(
      traceorder = "reversed"
    )
  )

fig_ns_county_stock
```
